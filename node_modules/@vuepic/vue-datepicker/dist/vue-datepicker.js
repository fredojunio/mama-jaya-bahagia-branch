import { openBlock as p, createElementBlock as _, createElementVNode as ne, reactive as Mt, computed as E, unref as d, ref as W, watch as et, toRef as $t, onMounted as Ue, nextTick as dt, defineComponent as He, renderSlot as K, createCommentVNode as $, normalizeClass as ve, withKeys as ue, createBlock as fe, withModifiers as Ge, normalizeProps as Se, mergeProps as De, Fragment as ce, createTextVNode as We, toDisplayString as Ae, renderList as we, normalizeStyle as lt, createVNode as Qe, Transition as vt, withCtx as se, onBeforeUpdate as Xn, onUnmounted as On, withDirectives as Ct, vShow as Pt, createSlots as Ie, isRef as ot, guardReactiveProps as Fe, resolveDynamicComponent as In, useSlots as on, getCurrentScope as qn, onScopeDispose as Jn, Teleport as Qn } from "vue";
import { isBefore as sn, isEqual as Bn, isAfter as un, set as Te, setHours as Yn, setMinutes as Vn, setSeconds as En, setMilliseconds as dn, parse as an, isValid as _t, isDate as ea, format as wt, getMonth as pe, getDay as ta, getYear as ke, getHours as Ke, getMinutes as je, getSeconds as mt, parseISO as na, startOfWeek as yn, endOfWeek as aa, setMonth as Nt, setYear as ut, addDays as ft, add as Fn, addMonths as st, subMonths as bt, getWeek as ra, getISOWeek as la, differenceInCalendarDays as oa, eachDayOfInterval as gn, addYears as sa, subYears as ia, sub as ua } from "date-fns";
function Et() {
  return p(), _(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ne("path", {
        d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z"
      }),
      ne("path", {
        d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      ne("path", {
        d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      ne("path", {
        d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z"
      })
    ]
  );
}
function da() {
  return p(), _(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ne("path", {
        d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z"
      }),
      ne("path", {
        d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
function hn() {
  return p(), _(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ne("path", {
        d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
function pn() {
  return p(), _(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ne("path", {
        d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z"
      })
    ]
  );
}
function Ln() {
  return p(), _(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ne("path", {
        d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z"
      }),
      ne("path", {
        d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      })
    ]
  );
}
function Un() {
  return p(), _(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ne("path", {
        d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
function Hn() {
  return p(), _(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ne("path", {
        d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
const kn = (e, n, a, t) => {
  const s = an(e, n.slice(0, e.length), /* @__PURE__ */ new Date());
  return _t(s) && ea(s) ? t ? s : Te(s, {
    hours: +a.hours,
    minutes: +(a == null ? void 0 : a.minutes),
    seconds: +(a == null ? void 0 : a.seconds),
    milliseconds: 0
  }) : null;
}, ca = (e, n, a, t) => {
  const s = Array.isArray(a) ? a[0] : a;
  if (typeof n == "string")
    return kn(e, n, s, t);
  if (Array.isArray(n)) {
    let f = null;
    for (const h of n)
      if (f = kn(e, h, s, t), f)
        break;
    return f;
  }
  return typeof n == "function" ? n(e) : null;
}, b = (e) => e ? new Date(e) : /* @__PURE__ */ new Date(), fa = (e, n) => {
  if (n) {
    const t = (e.getMonth() + 1).toString().padStart(2, "0"), s = e.getDate().toString().padStart(2, "0"), f = e.getHours().toString().padStart(2, "0"), h = e.getMinutes().toString().padStart(2, "0");
    return `${e.getFullYear()}-${t}-${s}T${f}:${h}:00.000Z`;
  }
  const a = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(a).toISOString();
}, Le = (e) => {
  let n = b(JSON.parse(JSON.stringify(e)));
  return n = Yn(n, 0), n = Vn(n, 0), n = En(n, 0), n = dn(n, 0), n;
}, Ee = (e, n, a, t) => {
  let s = e ? b(e) : b();
  return (n || n === 0) && (s = Yn(s, +n)), (a || a === 0) && (s = Vn(s, +a)), (t || t === 0) && (s = En(s, +t)), dn(s, 0);
}, Ce = (e, n) => !e || !n ? !1 : sn(Le(e), Le(n)), me = (e, n) => !e || !n ? !1 : Bn(Le(e), Le(n)), Oe = (e, n) => !e || !n ? !1 : un(Le(e), Le(n)), Wn = (e, n, a) => e && e[0] && e[1] ? Oe(a, e[0]) && Ce(a, e[1]) : e && e[0] && n ? Oe(a, e[0]) && Ce(a, n) || Ce(a, e[0]) && Oe(a, n) : !1, pt = (e) => {
  const n = Te(new Date(e), { date: 1 });
  return Le(n);
}, kt = Mt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), zn = () => {
  const e = (t) => {
    kt.menuFocused = t;
  }, n = (t) => {
    kt.shiftKeyInMenu !== t && (kt.shiftKeyInMenu = t);
  };
  return {
    control: E(() => ({ shiftKeyInMenu: kt.shiftKeyInMenu, menuFocused: kt.menuFocused })),
    setMenuFocused: e,
    setShiftKey: n
  };
};
function cn(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Ot = {}, ma = {
  get exports() {
    return Ot;
  },
  set exports(e) {
    Ot = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    if (t === null || t === !0 || t === !1)
      return NaN;
    var s = Number(t);
    return isNaN(s) ? s : s < 0 ? Math.ceil(s) : Math.floor(s);
  }
  e.exports = n.default;
})(ma, Ot);
const va = /* @__PURE__ */ cn(Ot);
var It = {}, ya = {
  get exports() {
    return It;
  },
  set exports(e) {
    It = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    var s = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
    return s.setUTCFullYear(t.getFullYear()), t.getTime() - s.getTime();
  }
  e.exports = n.default;
})(ya, It);
const wn = /* @__PURE__ */ cn(It);
function ga(e, n) {
  var a = wa(n);
  return a.formatToParts ? pa(a, e) : ka(a, e);
}
var ha = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function pa(e, n) {
  try {
    for (var a = e.formatToParts(n), t = [], s = 0; s < a.length; s++) {
      var f = ha[a[s].type];
      f >= 0 && (t[f] = parseInt(a[s].value, 10));
    }
    return t;
  } catch (h) {
    if (h instanceof RangeError)
      return [NaN];
    throw h;
  }
}
function ka(e, n) {
  var a = e.format(n).replace(/\u200E/g, ""), t = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(a);
  return [t[3], t[1], t[2], t[4], t[5], t[6]];
}
var jt = {};
function wa(e) {
  if (!jt[e]) {
    var n = new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: "America/New_York",
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }).format(/* @__PURE__ */ new Date("2014-06-25T04:00:00.123Z")), a = n === "06/25/2014, 00:00:00" || n === "‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00";
    jt[e] = a ? new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }) : new Intl.DateTimeFormat("en-US", {
      hourCycle: "h23",
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }
  return jt[e];
}
function fn(e, n, a, t, s, f, h) {
  var R = /* @__PURE__ */ new Date(0);
  return R.setUTCFullYear(e, n, a), R.setUTCHours(t, s, f, h), R;
}
var bn = 36e5, ba = 6e4, Gt = {
  timezone: /([Z+-].*)$/,
  timezoneZ: /^(Z)$/,
  timezoneHH: /^([+-]\d{2})$/,
  timezoneHHMM: /^([+-]\d{2}):?(\d{2})$/
};
function mn(e, n, a) {
  var t, s;
  if (!e || (t = Gt.timezoneZ.exec(e), t))
    return 0;
  var f;
  if (t = Gt.timezoneHH.exec(e), t)
    return f = parseInt(t[1], 10), Dn(f) ? -(f * bn) : NaN;
  if (t = Gt.timezoneHHMM.exec(e), t) {
    f = parseInt(t[1], 10);
    var h = parseInt(t[2], 10);
    return Dn(f, h) ? (s = Math.abs(f) * bn + h * ba, f > 0 ? -s : s) : NaN;
  }
  if (Ma(e)) {
    n = new Date(n || Date.now());
    var R = a ? n : Da(n), B = rn(R, e), T = a ? B : $a(n, B, e);
    return -T;
  }
  return NaN;
}
function Da(e) {
  return fn(
    e.getFullYear(),
    e.getMonth(),
    e.getDate(),
    e.getHours(),
    e.getMinutes(),
    e.getSeconds(),
    e.getMilliseconds()
  );
}
function rn(e, n) {
  var a = ga(e, n), t = fn(
    a[0],
    a[1] - 1,
    a[2],
    a[3] % 24,
    a[4],
    a[5],
    0
  ).getTime(), s = e.getTime(), f = s % 1e3;
  return s -= f >= 0 ? f : 1e3 + f, t - s;
}
function $a(e, n, a) {
  var t = e.getTime(), s = t - n, f = rn(new Date(s), a);
  if (n === f)
    return n;
  s -= f - n;
  var h = rn(new Date(s), a);
  return f === h ? f : Math.max(f, h);
}
function Dn(e, n) {
  return -23 <= e && e <= 23 && (n == null || 0 <= n && n <= 59);
}
var $n = {};
function Ma(e) {
  if ($n[e])
    return !0;
  try {
    return new Intl.DateTimeFormat(void 0, { timeZone: e }), $n[e] = !0, !0;
  } catch {
    return !1;
  }
}
var Ta = /(Z|[+-]\d{2}(?::?\d{2})?| UTC| [a-zA-Z]+\/[a-zA-Z_]+(?:\/[a-zA-Z_]+)?)$/;
const xn = Ta;
var Zt = 36e5, Mn = 6e4, Aa = 2, Re = {
  dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,
  datePattern: /^([0-9W+-]+)(.*)/,
  plainTime: /:/,
  // year tokens
  YY: /^(\d{2})$/,
  YYY: [
    /^([+-]\d{2})$/,
    // 0 additional digits
    /^([+-]\d{3})$/,
    // 1 additional digit
    /^([+-]\d{4})$/
    // 2 additional digits
  ],
  YYYY: /^(\d{4})/,
  YYYYY: [
    /^([+-]\d{4})/,
    // 0 additional digits
    /^([+-]\d{5})/,
    // 1 additional digit
    /^([+-]\d{6})/
    // 2 additional digits
  ],
  // date tokens
  MM: /^-(\d{2})$/,
  DDD: /^-?(\d{3})$/,
  MMDD: /^-?(\d{2})-?(\d{2})$/,
  Www: /^-?W(\d{2})$/,
  WwwD: /^-?W(\d{2})-?(\d{1})$/,
  HH: /^(\d{2}([.,]\d*)?)$/,
  HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
  HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,
  // time zone tokens (to identify the presence of a tz)
  timeZone: xn
};
function ln(e, n) {
  if (arguments.length < 1)
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  if (e === null)
    return /* @__PURE__ */ new Date(NaN);
  var a = n || {}, t = a.additionalDigits == null ? Aa : va(a.additionalDigits);
  if (t !== 2 && t !== 1 && t !== 0)
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  if (e instanceof Date || typeof e == "object" && Object.prototype.toString.call(e) === "[object Date]")
    return new Date(e.getTime());
  if (typeof e == "number" || Object.prototype.toString.call(e) === "[object Number]")
    return new Date(e);
  if (!(typeof e == "string" || Object.prototype.toString.call(e) === "[object String]"))
    return /* @__PURE__ */ new Date(NaN);
  var s = Sa(e), f = Ca(s.date, t), h = f.year, R = f.restDateString, B = Pa(R, h);
  if (isNaN(B))
    return /* @__PURE__ */ new Date(NaN);
  if (B) {
    var T = B.getTime(), U = 0, M;
    if (s.time && (U = _a(s.time), isNaN(U)))
      return /* @__PURE__ */ new Date(NaN);
    if (s.timeZone || a.timeZone) {
      if (M = mn(s.timeZone || a.timeZone, new Date(T + U)), isNaN(M))
        return /* @__PURE__ */ new Date(NaN);
    } else
      M = wn(new Date(T + U)), M = wn(new Date(T + U + M));
    return new Date(T + U + M);
  } else
    return /* @__PURE__ */ new Date(NaN);
}
function Sa(e) {
  var n = {}, a = Re.dateTimePattern.exec(e), t;
  if (a ? (n.date = a[1], t = a[3]) : (a = Re.datePattern.exec(e), a ? (n.date = a[1], t = a[2]) : (n.date = null, t = e)), t) {
    var s = Re.timeZone.exec(t);
    s ? (n.time = t.replace(s[1], ""), n.timeZone = s[1].trim()) : n.time = t;
  }
  return n;
}
function Ca(e, n) {
  var a = Re.YYY[n], t = Re.YYYYY[n], s;
  if (s = Re.YYYY.exec(e) || t.exec(e), s) {
    var f = s[1];
    return {
      year: parseInt(f, 10),
      restDateString: e.slice(f.length)
    };
  }
  if (s = Re.YY.exec(e) || a.exec(e), s) {
    var h = s[1];
    return {
      year: parseInt(h, 10) * 100,
      restDateString: e.slice(h.length)
    };
  }
  return {
    year: null
  };
}
function Pa(e, n) {
  if (n === null)
    return null;
  var a, t, s, f;
  if (e.length === 0)
    return t = /* @__PURE__ */ new Date(0), t.setUTCFullYear(n), t;
  if (a = Re.MM.exec(e), a)
    return t = /* @__PURE__ */ new Date(0), s = parseInt(a[1], 10) - 1, An(n, s) ? (t.setUTCFullYear(n, s), t) : /* @__PURE__ */ new Date(NaN);
  if (a = Re.DDD.exec(e), a) {
    t = /* @__PURE__ */ new Date(0);
    var h = parseInt(a[1], 10);
    return Oa(n, h) ? (t.setUTCFullYear(n, 0, h), t) : /* @__PURE__ */ new Date(NaN);
  }
  if (a = Re.MMDD.exec(e), a) {
    t = /* @__PURE__ */ new Date(0), s = parseInt(a[1], 10) - 1;
    var R = parseInt(a[2], 10);
    return An(n, s, R) ? (t.setUTCFullYear(n, s, R), t) : /* @__PURE__ */ new Date(NaN);
  }
  if (a = Re.Www.exec(e), a)
    return f = parseInt(a[1], 10) - 1, Sn(n, f) ? Tn(n, f) : /* @__PURE__ */ new Date(NaN);
  if (a = Re.WwwD.exec(e), a) {
    f = parseInt(a[1], 10) - 1;
    var B = parseInt(a[2], 10) - 1;
    return Sn(n, f, B) ? Tn(n, f, B) : /* @__PURE__ */ new Date(NaN);
  }
  return null;
}
function _a(e) {
  var n, a, t;
  if (n = Re.HH.exec(e), n)
    return a = parseFloat(n[1].replace(",", ".")), Xt(a) ? a % 24 * Zt : NaN;
  if (n = Re.HHMM.exec(e), n)
    return a = parseInt(n[1], 10), t = parseFloat(n[2].replace(",", ".")), Xt(a, t) ? a % 24 * Zt + t * Mn : NaN;
  if (n = Re.HHMMSS.exec(e), n) {
    a = parseInt(n[1], 10), t = parseInt(n[2], 10);
    var s = parseFloat(n[3].replace(",", "."));
    return Xt(a, t, s) ? a % 24 * Zt + t * Mn + s * 1e3 : NaN;
  }
  return null;
}
function Tn(e, n, a) {
  n = n || 0, a = a || 0;
  var t = /* @__PURE__ */ new Date(0);
  t.setUTCFullYear(e, 0, 4);
  var s = t.getUTCDay() || 7, f = n * 7 + a + 1 - s;
  return t.setUTCDate(t.getUTCDate() + f), t;
}
var Na = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], Ra = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function Kn(e) {
  return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0;
}
function An(e, n, a) {
  if (n < 0 || n > 11)
    return !1;
  if (a != null) {
    if (a < 1)
      return !1;
    var t = Kn(e);
    if (t && a > Ra[n] || !t && a > Na[n])
      return !1;
  }
  return !0;
}
function Oa(e, n) {
  if (n < 1)
    return !1;
  var a = Kn(e);
  return !(a && n > 366 || !a && n > 365);
}
function Sn(e, n, a) {
  return !(n < 0 || n > 52 || a != null && (a < 0 || a > 6));
}
function Xt(e, n, a) {
  return !(e != null && (e < 0 || e >= 25) || n != null && (n < 0 || n >= 60) || a != null && (a < 0 || a >= 60));
}
var Bt = {}, Ia = {
  get exports() {
    return Bt;
  },
  set exports(e) {
    Bt = e;
  }
}, Yt = {}, Ba = {
  get exports() {
    return Yt;
  },
  set exports(e) {
    Yt = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t, s) {
    if (t == null)
      throw new TypeError("assign requires that input parameter not be null or undefined");
    for (var f in s)
      Object.prototype.hasOwnProperty.call(s, f) && (t[f] = s[f]);
    return t;
  }
  e.exports = n.default;
})(Ba, Yt);
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = s;
  var a = t(Yt);
  function t(f) {
    return f && f.__esModule ? f : { default: f };
  }
  function s(f) {
    return (0, a.default)({}, f);
  }
  e.exports = n.default;
})(Ia, Bt);
const Ya = /* @__PURE__ */ cn(Bt);
function Va(e, n, a) {
  var t = ln(e, a), s = mn(n, t, !0), f = new Date(t.getTime() - s), h = /* @__PURE__ */ new Date(0);
  return h.setFullYear(f.getUTCFullYear(), f.getUTCMonth(), f.getUTCDate()), h.setHours(f.getUTCHours(), f.getUTCMinutes(), f.getUTCSeconds(), f.getUTCMilliseconds()), h;
}
function Ea(e, n, a) {
  if (typeof e == "string" && !e.match(xn)) {
    var t = Ya(a);
    return t.timeZone = n, ln(e, t);
  }
  var s = ln(e, a), f = fn(
    s.getFullYear(),
    s.getMonth(),
    s.getDate(),
    s.getHours(),
    s.getMinutes(),
    s.getSeconds(),
    s.getMilliseconds()
  ).getTime(), h = mn(n, new Date(f));
  return new Date(f + h);
}
const Fa = (e, n = 3) => {
  const a = [];
  for (let t = 0; t < e.length; t += n)
    a.push([e[t], e[t + 1], e[t + 2]]);
  return a;
}, La = (e, n) => {
  const a = [1, 2, 3, 4, 5, 6, 7].map((f) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(/* @__PURE__ */ new Date(`2017-01-0${f}T00:00:00+00:00`)).slice(0, 2)), t = a.slice(0, n), s = a.slice(n + 1, a.length);
  return [a[n]].concat(...s).concat(...t);
}, Ua = (e, n) => {
  const a = [];
  for (let t = +e[0]; t <= +e[1]; t++)
    a.push({ value: +t, text: `${t}` });
  return n ? a.reverse() : a;
}, Ha = (e, n) => {
  const a = new Intl.DateTimeFormat(e, { month: n, timeZone: "UTC" });
  return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((s) => {
    const f = s < 10 ? `0${s}` : s;
    return /* @__PURE__ */ new Date(`2017-${f}-01T00:00:00+00:00`);
  }).map((s, f) => ({
    text: a.format(s),
    value: f
  }));
}, Wa = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], $e = (e) => {
  const n = d(e);
  return n != null && n.$el ? n == null ? void 0 : n.$el : n;
}, za = (e) => Object.assign({ type: "dot" }, e), jn = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, Vt = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, be = (e) => e, Cn = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, Pn = (e) => Object.assign(
  {
    menuAppear: "dp-menu-appear",
    open: "dp-slide-down",
    close: "dp-slide-up",
    next: "calendar-next",
    previous: "calendar-prev",
    vNext: "dp-slide-up",
    vPrevious: "dp-slide-down"
  },
  e
), xa = (e) => Object.assign(
  {
    toggleOverlay: "Toggle overlay",
    menu: "Datepicker menu",
    input: "Datepicker input",
    calendarWrap: "Calendar wrapper",
    calendarDays: "Calendar days",
    openTimePicker: "Open time picker",
    closeTimePicker: "Close time Picker",
    incrementValue: (n) => `Increment ${n}`,
    decrementValue: (n) => `Decrement ${n}`,
    openTpOverlay: (n) => `Open ${n} overlay`,
    amPmButton: "Switch AM/PM mode",
    openYearsOverlay: "Open years overlay",
    openMonthsOverlay: "Open months overlay",
    nextMonth: "Next month",
    prevMonth: "Previous month",
    day: () => ""
  },
  e
), Ka = (e) => e === null ? 0 : typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2, ja = (e, n, a) => e || (typeof a == "string" ? a : n), Ga = (e) => typeof e == "boolean" ? e ? Pn({}) : !1 : Pn(e), Za = () => ({
  enterSubmit: !0,
  tabSubmit: !0,
  openMenu: !0,
  rangeSeparator: " - "
}), Xa = (e) => Object.assign({ months: [], years: [], times: { hours: [], minutes: [], seconds: [] } }, e), Ve = (e) => {
  const n = () => {
    if (e.partialRange)
      return null;
    throw new Error(Vt.prop("partial-range"));
  }, a = E(() => ({
    ariaLabels: xa(e.ariaLabels),
    textInputOptions: Object.assign(Za(), e.textInputOptions),
    multiCalendars: Ka(e.multiCalendars),
    previewFormat: ja(e.previewFormat, e.format, f()),
    filters: Xa(e.filters),
    transitions: Ga(e.transitions),
    startTime: v()
  })), t = (i) => {
    if (e.range)
      return i();
    throw new Error(Vt.prop("range"));
  }, s = () => {
    const i = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${i}` : `hh:mm${i} aa`;
  }, f = () => e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? s() : e.weekPicker ? "MM/dd/yyyy" : e.yearPicker ? "yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${s()}` : "MM/dd/yyyy", h = (i, r) => {
    if (typeof e.format == "function")
      return e.format(i);
    const c = r || f(), D = e.formatLocale ? { locale: e.formatLocale } : void 0;
    return Array.isArray(i) ? `${wt(i[0], c, D)} ${e.modelAuto && !i[1] ? "" : a.value.textInputOptions.rangeSeparator || "-"} ${i[1] ? wt(i[1], c, D) : ""}` : wt(i, c, D);
  }, R = (i) => e.timezone ? Va(i, e.timezone) : i, B = (i) => e.timezone ? Ea(i, e.timezone) : i, T = E(() => (i) => {
    var r;
    return (r = e.hideNavigation) == null ? void 0 : r.includes(i);
  }), U = (i) => {
    const r = e.maxDate ? Oe(R(i), R(b(e.maxDate))) : !1, c = e.minDate ? Ce(R(i), R(b(e.minDate))) : !1, D = C(i, e.disabledDates), O = a.value.filters.months.map((ie) => +ie).includes(pe(i)), g = e.disabledWeekDays.length ? e.disabledWeekDays.some((ie) => +ie === ta(i)) : !1, w = e.allowedDates.length ? !e.allowedDates.some((ie) => me(R(b(ie)), R(i))) : !1, y = ke(i), F = y < +e.yearRange[0] || y > +e.yearRange[1];
    return !(r || c || D || O || F || g || w);
  }, M = (i) => {
    const r = {
      hours: Ke(b()),
      minutes: je(b()),
      seconds: e.enableSeconds ? mt(b()) : 0
    };
    return Object.assign(r, i);
  }, v = () => e.range ? e.startTime && Array.isArray(e.startTime) ? [M(e.startTime[0]), M(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? M(e.startTime) : null, A = (i) => !U(i), J = (i) => Array.isArray(i) ? _t(i[0]) && (i[1] ? _t(i[1]) : !0) : i ? _t(i) : !1, Z = (i) => i instanceof Date ? i : na(i), H = (i) => {
    const r = yn(R(i), { weekStartsOn: +e.weekStart }), c = aa(R(i), { weekStartsOn: +e.weekStart });
    return [r, c];
  }, C = (i, r) => Array.isArray(r) ? r.some((c) => me(R(b(c)), R(i))) : r(i), V = (i, r, c) => {
    let D = i ? b(i) : b();
    return (r || r === 0) && (D = Nt(D, r)), c && (D = ut(D, c)), D;
  }, Y = (i) => Te(b(), { hours: Ke(i), minutes: je(i), seconds: mt(i) }), q = (i) => Te(b(), {
    hours: +i.hours || 0,
    minutes: +i.minutes || 0,
    seconds: +i.seconds || 0
  }), z = (i, r, c, D) => {
    if (!i)
      return !0;
    if (D) {
      const L = c === "max" ? sn(i, r) : un(i, r), O = { seconds: 0, milliseconds: 0 };
      return L || Bn(Te(i, O), Te(r, O));
    }
    return c === "max" ? i.getTime() <= r.getTime() : i.getTime() >= r.getTime();
  }, ee = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, le = (i) => Array.isArray(i) ? [i[0] ? Y(i[0]) : null, i[1] ? Y(i[1]) : null] : Y(i), S = (i) => {
    const r = e.maxTime ? q(e.maxTime) : b(e.maxDate);
    return Array.isArray(i) ? z(i[0], r, "max", !!e.maxDate) && z(i[1], r, "max", !!e.maxDate) : z(i, r, "max", !!e.maxDate);
  }, P = (i, r) => {
    const c = e.minTime ? q(e.minTime) : b(e.minDate);
    return Array.isArray(i) ? z(i[0], c, "min", !!e.minDate) && z(i[1], c, "min", !!e.minDate) && r : z(i, c, "min", !!e.minDate) && r;
  }, X = (i) => {
    let r = !0;
    if (!i || ee())
      return !0;
    const c = !e.minDate && !e.maxDate ? le(i) : i;
    return (e.maxTime || e.maxDate) && (r = S(be(c))), (e.minTime || e.minDate) && (r = P(be(c), r)), r;
  }, m = (i, r) => {
    const c = b(JSON.parse(JSON.stringify(i))), D = [];
    for (let L = 0; L < 7; L++) {
      const O = ft(c, L), g = pe(O) !== r;
      D.push({
        text: e.hideOffsetDates && g ? "" : O.getDate(),
        value: O,
        current: !g,
        classData: {}
      });
    }
    return D;
  }, N = (i, r) => {
    const c = [], D = b(R(new Date(r, i))), L = b(R(new Date(r, i + 1, 0))), O = yn(D, { weekStartsOn: e.weekStart }), g = (w) => {
      const y = m(w, i);
      if (c.push({ days: y }), !c[c.length - 1].days.some(
        (F) => me(Le(F.value), Le(L))
      )) {
        const F = ft(w, 7);
        g(F);
      }
    };
    if (g(O), e.sixWeeks && c.length < 6) {
      const w = 6 - c.length;
      for (let y = 1; y <= w; y++) {
        const F = c[c.length - 1], ie = F.days[F.days.length - 1], Pe = m(ft(ie.value, 1), pe(D));
        c.push({ days: Pe });
      }
    }
    return c;
  }, x = (i, r, c) => [Te(b(i), { date: 1 }), Te(b(), { month: r, year: c, date: 1 })], oe = (i, r) => Ce(...x(e.minDate, i, r)) || me(...x(e.minDate, i, r)), Q = (i, r) => Oe(...x(e.maxDate, i, r)) || me(...x(e.maxDate, i, r)), I = (i, r, c) => {
    let D = !1;
    return e.maxDate && c && Q(i, r) && (D = !0), e.minDate && !c && oe(i, r) && (D = !0), D;
  };
  return {
    checkPartialRangeValue: n,
    checkRangeEnabled: t,
    getZonedDate: R,
    getZonedToUtc: B,
    formatDate: h,
    getDefaultPattern: f,
    validateDate: U,
    getDefaultStartTime: v,
    isDisabled: A,
    isValidDate: J,
    sanitizeDate: Z,
    getWeekFromDate: H,
    matchDate: C,
    setDateMonthOrYear: V,
    isValidTime: X,
    getCalendarDays: N,
    validateMonthYearInRange: (i, r, c, D) => {
      let L = !1;
      return D ? e.minDate && e.maxDate ? L = I(i, r, c) : (e.minDate && oe(i, r) || e.maxDate && Q(i, r)) && (L = !0) : L = !0, L;
    },
    validateMaxDate: Q,
    validateMinDate: oe,
    assignDefaultTime: M,
    defaults: a,
    hideNavigationButtons: T
  };
}, he = Mt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), qt = W(null), St = W(!1), Jt = W(!1), Qt = W(!1), en = W(!1), Ne = W(0), Me = W(0), tt = () => {
  const e = E(() => St.value ? [...he.selectionGrid, he.actionRow].filter((C) => C.length) : Jt.value ? [
    ...he.timePicker[0],
    ...he.timePicker[1],
    en.value ? [] : [qt.value],
    he.actionRow
  ].filter((C) => C.length) : Qt.value ? [...he.monthPicker, he.actionRow] : [he.monthYear, ...he.calendar, he.time, he.actionRow].filter((C) => C.length)), n = (C) => {
    Ne.value = C ? Ne.value + 1 : Ne.value - 1;
    let V = null;
    e.value[Me.value] && (V = e.value[Me.value][Ne.value]), V || (Ne.value = C ? Ne.value - 1 : Ne.value + 1);
  }, a = (C) => {
    if (Me.value === 0 && !C || Me.value === e.value.length && C)
      return;
    Me.value = C ? Me.value + 1 : Me.value - 1, e.value[Me.value] ? e.value[Me.value] && !e.value[Me.value][Ne.value] && Ne.value !== 0 && (Ne.value = e.value[Me.value].length - 1) : Me.value = C ? Me.value - 1 : Me.value + 1;
  }, t = (C) => {
    let V = null;
    e.value[Me.value] && (V = e.value[Me.value][Ne.value]), V ? V.focus({ preventScroll: !St.value }) : Ne.value = C ? Ne.value - 1 : Ne.value + 1;
  }, s = () => {
    n(!0), t(!0);
  }, f = () => {
    n(!1), t(!1);
  }, h = () => {
    a(!1), t(!0);
  }, R = () => {
    a(!0), t(!0);
  }, B = (C, V) => {
    he[V] = C;
  }, T = (C, V) => {
    he[V] = C;
  }, U = () => {
    Ne.value = 0, Me.value = 0;
  };
  return {
    buildMatrix: B,
    buildMultiLevelMatrix: T,
    setTimePickerBackRef: (C) => {
      qt.value = C;
    },
    setSelectionGrid: (C) => {
      St.value = C, U(), C || (he.selectionGrid = []);
    },
    setTimePicker: (C, V = !1) => {
      Jt.value = C, en.value = V, U(), C || (he.timePicker[0] = [], he.timePicker[1] = []);
    },
    setTimePickerElements: (C, V = 0) => {
      he.timePicker[V] = C;
    },
    arrowRight: s,
    arrowLeft: f,
    arrowUp: h,
    arrowDown: R,
    clearArrowNav: () => {
      he.monthYear = [], he.calendar = [], he.time = [], he.actionRow = [], he.selectionGrid = [], he.timePicker[0] = [], he.timePicker[1] = [], St.value = !1, Jt.value = !1, en.value = !1, Qt.value = !1, U(), qt.value = null;
    },
    setMonthPicker: (C) => {
      Qt.value = C, U();
    },
    refSets: he
    // exposed for testing
  };
}, _n = (e) => Array.isArray(e), rt = (e) => Array.isArray(e), Nn = (e) => Array.isArray(e) && e.length === 2, qa = (e, n, a, t, s) => {
  const {
    getDefaultStartTime: f,
    isDisabled: h,
    sanitizeDate: R,
    getWeekFromDate: B,
    setDateMonthOrYear: T,
    validateMonthYearInRange: U,
    defaults: M
  } = Ve(e), v = E({
    get: () => e.internalModelValue,
    set: (u) => {
      !e.readonly && !e.disabled && n("update:internal-model-value", u);
    }
  }), A = W([]);
  et(v, () => {
    ee();
  });
  const J = $t(e, "multiCalendars");
  et(J, () => {
    qe(0);
  });
  const Z = W([{ month: pe(b()), year: ke(b()) }]), H = Mt({
    hours: e.range ? [Ke(b()), Ke(b())] : Ke(b()),
    minutes: e.range ? [je(b()), je(b())] : je(b()),
    seconds: e.range ? [0, 0] : 0
  }), C = E(
    () => (u) => Z.value[u] ? Z.value[u].month : 0
  ), V = E(
    () => (u) => Z.value[u] ? Z.value[u].year : 0
  ), Y = E(() => e.flow && e.flow.length && !e.partialFlow ? s.value === e.flow.length : !0), q = (u, o, k) => {
    var j, de;
    Z.value[u] || (Z.value[u] = { month: 0, year: 0 }), Z.value[u].month = o === null ? (j = Z.value[u]) == null ? void 0 : j.month : o, Z.value[u].year = k === null ? (de = Z.value[u]) == null ? void 0 : de.year : k;
  }, z = (u, o) => {
    H[u] = o;
  };
  Ue(() => {
    v.value || (e.startDate && (q(0, pe(b(e.startDate)), ke(b(e.startDate))), M.value.multiCalendars && qe(0)), M.value.startTime && I()), ee(!0);
  });
  const ee = (u = !1) => {
    if (v.value)
      return Array.isArray(v.value) ? (A.value = v.value, m(u)) : S(v.value);
    if (e.timePicker)
      return N();
    if (e.monthPicker && !e.range)
      return x();
    if (e.yearPicker && !e.range)
      return oe();
    if (M.value.multiCalendars && u && !e.startDate)
      return le(b(), u);
  }, le = (u, o = !1) => {
    if ((!M.value.multiCalendars || !e.multiStatic || o) && q(0, pe(u), ke(u)), M.value.multiCalendars)
      for (let k = 1; k < M.value.multiCalendars; k++) {
        const j = Te(b(), { month: C.value(k - 1), year: V.value(k - 1) }), de = Fn(j, { months: 1 });
        Z.value[k] = { month: pe(de), year: ke(de) };
      }
  }, S = (u) => {
    le(u), z("hours", Ke(u)), z("minutes", je(u)), z("seconds", mt(u));
  }, P = (u, o) => {
    le(u[0], o);
    const k = (j, de) => [
      j(u[0]),
      u[1] ? j(u[1]) : H[de][1]
    ];
    z("hours", k(Ke, "hours")), z("minutes", k(je, "minutes")), z("seconds", k(mt, "seconds"));
  }, X = (u, o) => {
    if ((e.range || e.weekPicker) && !e.multiDates)
      return P(u, o);
    if (e.multiDates) {
      const k = u[u.length - 1];
      return S(k);
    }
  }, m = (u) => {
    const o = v.value;
    X(o, u), M.value.multiCalendars && e.multiCalendarsSolo && i();
  }, N = () => {
    if (I(), !e.range)
      v.value = Ee(b(), H.hours, H.minutes, Q());
    else {
      const u = H.hours, o = H.minutes;
      v.value = [
        Ee(b(), u[0], o[0], Q()),
        Ee(b(), u[1], o[1], Q(!1))
      ];
    }
  }, x = () => {
    e.multiDates ? v.value = [T(b(), C.value(0), V.value(0))] : v.value = T(b(), C.value(0), V.value(0));
  }, oe = () => {
    v.value = b();
  }, Q = (u = !0) => e.enableSeconds ? Array.isArray(H.seconds) ? u ? H.seconds[0] : H.seconds[1] : H.seconds : 0, I = () => {
    const u = f();
    if (u) {
      const o = Array.isArray(u), k = o ? [+u[0].hours, +u[1].hours] : +u.hours, j = o ? [+u[0].minutes, +u[1].minutes] : +u.minutes, de = o ? [+u[0].seconds, +u[1].seconds] : +u.seconds;
      z("hours", k), z("minutes", j), e.enableSeconds && z("seconds", de);
    }
  }, l = () => Array.isArray(v.value) && v.value.length ? v.value[v.value.length - 1] : null, i = () => {
    if (Array.isArray(v.value) && v.value.length === 2) {
      const u = b(
        b(v.value[1] ? v.value[1] : st(v.value[0], 1))
      ), [o, k] = [pe(v.value[0]), ke(v.value[0])], [j, de] = [pe(v.value[1]), ke(v.value[1])];
      (o !== j || o === j && k !== de) && e.multiCalendarsSolo && q(1, pe(u), ke(u));
    }
  }, r = (u) => {
    const o = st(u, 1);
    return { month: pe(o), year: ke(o) };
  }, c = (u) => {
    const o = pe(b(u)), k = ke(b(u));
    if (q(0, o, k), M.value.multiCalendars > 0)
      for (let j = 1; j < M.value.multiCalendars; j++) {
        const de = r(
          Te(b(u), { year: C.value(j - 1), month: V.value(j - 1) })
        );
        q(j, de.month, de.year);
      }
  }, D = (u) => {
    if (v.value && Array.isArray(v.value))
      if (v.value.some((o) => me(u, o))) {
        const o = v.value.filter((k) => !me(k, u));
        v.value = o.length ? o : null;
      } else
        (e.multiDatesLimit && +e.multiDatesLimit > v.value.length || !e.multiDatesLimit) && v.value.push(u);
    else
      v.value = [u];
  }, L = (u, o) => {
    const k = Oe(u, o) ? o : u, j = Oe(o, u) ? o : u;
    return gn({ start: k, end: j });
  }, O = (u, o = 0) => {
    if (Array.isArray(v.value) && v.value[o]) {
      const k = oa(u, v.value[o]), j = L(v.value[o], u), de = j.length === 1 ? 0 : j.filter((G) => h(G)).length, Ye = Math.abs(k) - de;
      if (e.minRange && e.maxRange)
        return Ye >= +e.minRange && Ye <= +e.maxRange;
      if (e.minRange)
        return Ye >= +e.minRange;
      if (e.maxRange)
        return Ye <= +e.maxRange;
    }
    return !0;
  }, g = (u) => Array.isArray(v.value) && v.value.length === 2 ? e.fixedStart && (Oe(u, v.value[0]) || me(u, v.value[0])) ? [v.value[0], u] : e.fixedEnd && (Ce(u, v.value[1]) || me(u, v.value[1])) ? [u, v.value[1]] : (n("invalid-fixed-range", u), v.value) : [], w = () => {
    e.autoApply && Y.value && n("auto-apply", e.partialFlow);
  }, y = () => {
    e.autoApply && n("select-date");
  }, F = (u) => !gn({ start: u[0], end: u[1] }).some((k) => h(k)), ie = (u) => (v.value = B(b(u.value)), w()), Pe = (u) => {
    const o = Ee(b(u.value), H.hours, H.minutes, Q());
    e.multiDates ? D(o) : v.value = o, a(), w();
  }, Ze = () => {
    A.value = v.value ? v.value.slice() : [], A.value.length === 2 && !(e.fixedStart || e.fixedEnd) && (A.value = []);
  }, re = (u, o) => {
    const k = [b(u.value), ft(b(u.value), +e.autoRange)];
    F(k) && (o && c(u.value), A.value = k);
  }, Xe = (u) => {
    ze(u.value) || !O(u.value, e.fixedStart ? 0 : 1) || (A.value = g(b(u.value)));
  }, ze = (u) => e.noDisabledRange ? L(A.value[0], u).some((k) => h(k)) : !1, _e = (u, o) => {
    if (Ze(), e.autoRange)
      return re(u, o);
    if (e.fixedStart || e.fixedEnd)
      return Xe(u);
    A.value[0] ? O(b(u.value)) && !ze(u.value) && (Ce(b(u.value), b(A.value[0])) ? A.value.unshift(b(u.value)) : A.value[1] = b(u.value)) : A.value[0] = b(u.value);
  }, at = (u) => {
    A.value[u] = Ee(
      A.value[u],
      H.hours[u],
      H.minutes[u],
      Q(u !== 1)
    );
  }, te = () => {
    A.value.length && (A.value[0] && !A.value[1] ? at(0) : (at(0), at(1), a()), v.value = A.value.slice(), A.value[0] && A.value[1] && e.autoApply && n("auto-apply"), A.value[0] && !A.value[1] && e.modelAuto && e.autoApply && n("auto-apply"));
  }, ge = (u, o = !1) => {
    if (!(h(u.value) || !u.current && e.hideOffsetDates)) {
      if (e.weekPicker)
        return ie(u);
      if (!e.range)
        return Pe(u);
      rt(H.hours) && rt(H.minutes) && !e.multiDates && (_e(u, o), te());
    }
  }, ye = (u) => {
    const o = u[0];
    return e.weekNumbers === "local" ? ra(o.value, { weekStartsOn: +e.weekStart }) : e.weekNumbers === "iso" ? la(o.value) : typeof e.weekNumbers == "function" ? e.weekNumbers(o.value) : "";
  }, qe = (u) => {
    for (let o = u - 1; o >= 0; o--) {
      const k = bt(Te(b(), { month: C.value(o + 1), year: V.value(o + 1) }), 1);
      q(o, pe(k), ke(k));
    }
    for (let o = u + 1; o <= M.value.multiCalendars - 1; o++) {
      const k = st(Te(b(), { month: C.value(o - 1), year: V.value(o - 1) }), 1);
      q(o, pe(k), ke(k));
    }
  }, Be = (u) => T(b(), C.value(u), V.value(u)), Tt = (u) => Ee(u, H.hours, H.minutes, Q()), Lt = (u) => {
    D(Be(u));
  }, Ut = (u, o) => {
    const k = e.monthPicker ? C.value(u) !== o.month || !o.fromNav : V.value(u) !== o.year || !o.fromNav;
    if (q(u, o.month, o.year), M.value.multiCalendars && !e.multiCalendarsSolo && qe(u), e.monthPicker || e.yearPicker)
      if (e.multiDates)
        k && Lt(u);
      else if (e.range) {
        if (k && O(Be(u))) {
          let j = v.value ? v.value.slice() : [];
          j.length === 2 && j[1] !== null && (j = []), j.length ? Ce(Be(u), j[0]) ? j.unshift(Be(u)) : j[1] = Be(u) : j = [Be(u)], v.value = j;
        }
      } else
        v.value = Be(u);
    n("update-month-year", { instance: u, month: o.month, year: o.year }), t(e.multiCalendarsSolo ? u : void 0);
  }, Ht = async (u = !1) => {
    if (e.autoApply && (e.monthPicker || e.yearPicker)) {
      await dt();
      const o = e.monthPicker ? u : !1;
      e.range ? n("auto-apply", o || !v.value || v.value.length === 1) : n("auto-apply", o);
    }
    a();
  }, At = (u, o) => {
    const k = Te(b(), { month: C.value(o), year: V.value(o) }), j = u < 0 ? st(k, 1) : bt(k, 1);
    U(pe(j), ke(j), u < 0, e.preventMinMaxNavigation) && (q(o, pe(j), ke(j)), M.value.multiCalendars && !e.multiCalendarsSolo && qe(o), n("update-month-year", { instance: o, month: pe(j), year: ke(j) }), t());
  }, yt = (u) => {
    _n(u) && _n(v.value) && rt(H.hours) && rt(H.minutes) ? (u[0] && v.value[0] && (v.value[0] = Ee(u[0], H.hours[0], H.minutes[0], Q())), u[1] && v.value[1] && (v.value[1] = Ee(u[1], H.hours[1], H.minutes[1], Q(!1)))) : e.multiDates && Array.isArray(v.value) ? v.value[v.value.length - 1] = Tt(u) : !e.range && !Nn(u) && (v.value = Tt(u)), n("time-update");
  }, Wt = (u, o = !0, k = !1) => {
    const j = o ? u : H.hours, de = !o && !k ? u : H.minutes, Ye = k ? u : H.seconds;
    if (e.range && Nn(v.value) && rt(j) && rt(de) && rt(Ye) && !e.disableTimeRangeValidation) {
      const G = (ae) => Ee(v.value[ae], j[ae], de[ae], Ye[ae]), xe = (ae) => dn(v.value[ae], 0);
      if (me(v.value[0], v.value[1]) && (un(G(0), xe(1)) || sn(G(1), xe(0))))
        return;
    }
    if (z("hours", j), z("minutes", de), z("seconds", Ye), v.value)
      if (e.multiDates) {
        const G = l();
        G && yt(G);
      } else
        yt(v.value);
    else
      e.timePicker && yt(e.range ? [b(), b()] : b());
    a();
  }, zt = (u, o) => {
    e.monthChangeOnScroll && At(e.monthChangeOnScroll !== "inverse" ? -u.deltaY : u.deltaY, o);
  }, gt = (u, o, k = !1) => {
    e.monthChangeOnArrows && e.vertical === k && Je(u, o);
  }, Je = (u, o) => {
    At(u === "right" ? -1 : 1, o);
  };
  return {
    time: H,
    month: C,
    year: V,
    modelValue: v,
    calendars: Z,
    monthYearSelect: Ht,
    isDisabled: h,
    updateTime: Wt,
    getWeekNum: ye,
    selectDate: ge,
    updateMonthYear: Ut,
    handleScroll: zt,
    getMarker: (u) => e.markers.find((o) => me(R(u.value), R(o.date))),
    handleArrow: gt,
    handleSwipe: Je,
    selectCurrentDate: () => {
      e.range ? v.value && Array.isArray(v.value) && v.value[0] ? v.value = Ce(b(), v.value[0]) ? [b(), v.value[0]] : [v.value[0], b()] : v.value = [b()] : v.value = b(), y();
    },
    presetDateRange: (u, o) => {
      o || u.length && u.length <= 2 && e.range && (v.value = u.map((k) => b(k)), y(), e.multiCalendars && dt().then(() => ee(!0)));
    }
  };
}, Ja = (e, n, a) => {
  const t = W(), {
    getZonedToUtc: s,
    getZonedDate: f,
    formatDate: h,
    getDefaultPattern: R,
    checkRangeEnabled: B,
    checkPartialRangeValue: T,
    isValidDate: U,
    setDateMonthOrYear: M,
    defaults: v
  } = Ve(n), A = W(""), J = $t(n, "format");
  et(t, () => {
    e("internal-model-change", t.value);
  }), et(J, () => {
    i();
  });
  const Z = (y) => {
    const F = y || b();
    return n.modelType ? c(F) : {
      hours: Ke(F),
      minutes: je(F),
      seconds: n.enableSeconds ? mt(F) : 0
    };
  }, H = (y) => n.modelType ? c(y) : { month: pe(y), year: ke(y) }, C = (y) => Array.isArray(y) ? B(() => [
    ut(b(), y[0]),
    y[1] ? ut(b(), y[1]) : T()
  ]) : ut(b(), +y), V = (y, F) => (typeof y == "string" || typeof y == "number") && n.modelType ? r(y) : F, Y = (y) => Array.isArray(y) ? [
    V(
      y[0],
      Ee(null, +y[0].hours, +y[0].minutes, y[0].seconds)
    ),
    V(
      y[1],
      Ee(null, +y[1].hours, +y[1].minutes, y[1].seconds)
    )
  ] : V(y, Ee(null, y.hours, y.minutes, y.seconds)), q = (y) => Array.isArray(y) ? n.multiDates ? y.map((F) => V(F, M(null, +F.month, +F.year))) : B(() => [
    V(y[0], M(null, +y[0].month, +y[0].year)),
    V(
      y[1],
      y[1] ? M(null, +y[1].month, +y[1].year) : T()
    )
  ]) : V(y, M(null, +y.month, +y.year)), z = (y) => {
    if (Array.isArray(y))
      return y.map((F) => r(F));
    throw new Error(Vt.dateArr("multi-dates"));
  }, ee = (y) => {
    if (Array.isArray(y))
      return [b(y[0]), b(y[1])];
    throw new Error(Vt.dateArr("week-picker"));
  }, le = (y) => n.modelAuto ? Array.isArray(y) ? [r(y[0]), r(y[1])] : n.autoApply ? [r(y)] : [r(y), null] : Array.isArray(y) ? B(() => [
    r(y[0]),
    y[1] ? r(y[1]) : T()
  ]) : r(y), S = () => {
    Array.isArray(t.value) && n.range && t.value.length === 1 && t.value.push(T());
  }, P = () => {
    const y = t.value;
    return [
      c(y[0]),
      y[1] ? c(y[1]) : T()
    ];
  }, X = () => t.value[1] ? P() : c(be(t.value[0])), m = () => (t.value || []).map((y) => c(y)), N = () => (S(), n.modelAuto ? X() : n.multiDates ? m() : Array.isArray(t.value) ? B(() => P()) : c(be(t.value))), x = (y) => y ? n.timePicker ? Y(be(y)) : n.monthPicker ? q(be(y)) : n.yearPicker ? C(be(y)) : n.multiDates ? z(be(y)) : n.weekPicker ? ee(be(y)) : le(be(y)) : null, oe = (y) => {
    const F = x(y);
    U(be(F)) ? (t.value = be(F), i()) : (t.value = null, A.value = "");
  }, Q = () => {
    var F;
    const y = (ie) => {
      var Pe;
      return wt(ie, (Pe = v.value.textInputOptions) == null ? void 0 : Pe.format);
    };
    return `${y(t.value[0])} ${(F = v.value.textInputOptions) == null ? void 0 : F.rangeSeparator} ${t.value[1] ? y(t.value[1]) : ""}`;
  }, I = () => {
    var y;
    return a.value && t.value ? Array.isArray(t.value) ? Q() : wt(t.value, (y = v.value.textInputOptions) == null ? void 0 : y.format) : h(t.value);
  }, l = () => {
    var y;
    return t.value ? n.multiDates ? t.value.map((F) => h(F)).join("; ") : n.textInput && typeof ((y = v.value.textInputOptions) == null ? void 0 : y.format) == "string" ? I() : h(t.value) : "";
  }, i = () => {
    !n.format || typeof n.format == "string" ? A.value = l() : A.value = n.format(t.value);
  }, r = (y) => {
    if (n.utc) {
      const F = new Date(y);
      return n.utc === "preserve" ? new Date(F.getTime() + F.getTimezoneOffset() * 6e4) : F;
    }
    return n.modelType ? n.modelType === "date" || n.modelType === "timestamp" ? f(new Date(y)) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? an(y, R(), /* @__PURE__ */ new Date()) : f(an(y, n.modelType, /* @__PURE__ */ new Date())) : f(new Date(y));
  }, c = (y) => y ? n.utc ? fa(y, n.utc === "preserve") : n.modelType ? n.modelType === "timestamp" ? +s(y) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? h(s(y)) : h(s(y), n.modelType) : s(y) : "", D = (y) => {
    e("update:model-value", y);
  }, L = (y) => Array.isArray(t.value) ? n.multiDates ? t.value.map((F) => y(F)) : [
    y(t.value[0]),
    t.value[1] ? y(t.value[1]) : T()
  ] : y(be(t.value)), O = (y) => D(be(L(y)));
  return {
    inputValue: A,
    internalModelValue: t,
    checkBeforeEmit: () => t.value ? n.range ? n.partialRange ? t.value.length >= 1 : t.value.length === 2 : !!t.value : !1,
    parseExternalModelValue: oe,
    formatInputValue: i,
    emitModelValue: () => (i(), n.monthPicker ? O(H) : n.timePicker ? O(Z) : n.yearPicker ? O(ke) : n.weekPicker ? D(t.value) : D(N()))
  };
}, Qa = (e, n) => {
  const { validateMonthYearInRange: a, validateMaxDate: t, validateMinDate: s, defaults: f } = Ve(e), h = (M, v) => {
    let A = M;
    return f.value.filters.months.includes(pe(A)) ? (A = v ? st(M, 1) : bt(M, 1), h(A, v)) : A;
  }, R = (M, v) => {
    let A = M;
    return f.value.filters.years.includes(ke(A)) ? (A = v ? sa(M, 1) : ia(M, 1), R(A, v)) : A;
  }, B = (M) => {
    const v = Te(/* @__PURE__ */ new Date(), { month: e.month, year: e.year });
    let A = M ? st(v, 1) : bt(v, 1), J = pe(A), Z = ke(A);
    f.value.filters.months.includes(J) && (A = h(A, M), J = pe(A), Z = ke(A)), f.value.filters.years.includes(Z) && (A = R(A, M), Z = ke(A)), a(J, Z, M, e.preventMinMaxNavigation) && T(J, Z);
  }, T = (M, v) => {
    n("update-month-year", { month: M, year: v });
  }, U = E(() => (M) => {
    if (!e.preventMinMaxNavigation || M && !e.maxDate || !M && !e.minDate)
      return !1;
    const v = Te(/* @__PURE__ */ new Date(), { month: e.month, year: e.year }), A = M ? st(v, 1) : bt(v, 1), J = [pe(A), ke(A)];
    return M ? !t(...J) : !s(...J);
  });
  return { handleMonthYearChange: B, isDisabled: U, updateMonthYear: T };
};
var Rt = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(Rt || {});
const er = (e, n, a, t) => {
  const s = W({
    top: "0",
    left: "0",
    transform: "none"
  }), f = W(!1), h = $t(t, "teleportCenter");
  et(h, () => {
    Z();
  });
  const R = (S) => {
    if (t.teleport) {
      const P = S.getBoundingClientRect();
      return {
        left: P.left + window.scrollX,
        top: P.top + window.scrollY
      };
    }
    return { top: 0, left: 0 };
  }, B = (S, P) => {
    s.value.left = `${S + P}px`, s.value.transform = "translateX(-100%)";
  }, T = (S) => {
    s.value.left = `${S}px`, s.value.transform = "translateX(0)";
  }, U = (S, P, X = !1) => {
    t.position === Rt.left && T(S), t.position === Rt.right && B(S, P), t.position === Rt.center && (s.value.left = `${S + P / 2}px`, s.value.transform = X ? "translate(-50%, -50%)" : "translateX(-50%)");
  }, M = (S) => {
    const { width: P, height: X } = S.getBoundingClientRect(), { top: m, left: N } = t.altPosition ? t.altPosition(S) : R(S);
    return { top: +m, left: +N, width: P, height: X };
  }, v = () => {
    const S = $e(n);
    if (S) {
      const { top: P, left: X, width: m, height: N } = M(S);
      s.value.top = `${P + N / 2}px`, s.value.transform = "translateY(-50%)", U(X, m, !0);
    }
  }, A = () => {
    s.value.left = "50%", s.value.top = "50%", s.value.transform = "translate(-50%, -50%)", s.value.position = "fixed";
  }, J = () => {
    const S = $e(n), { top: P, left: X, transform: m } = t.altPosition(S);
    s.value = { top: `${P}px`, left: `${X}px`, transform: m || "" };
  }, Z = (S = !0) => {
    if (!t.inline)
      return h.value ? A() : t.altPosition !== null ? J() : (S && a("recalculate-position"), z());
  }, H = ({
    inputEl: S,
    menuEl: P,
    left: X,
    width: m
  }) => {
    window.screen.width > 768 && U(X, m), Y(S, P);
  }, C = (S, P) => {
    const { top: X, left: m, height: N, width: x } = M(S);
    s.value.top = `${N + X + +t.offset}px`, H({ inputEl: S, menuEl: P, left: m, width: x }), f.value = !1;
  }, V = (S, P) => {
    const { top: X, left: m, width: N } = M(S), { height: x } = P.getBoundingClientRect();
    s.value.top = `${X - x - +t.offset}px`, H({ inputEl: S, menuEl: P, left: m, width: N }), f.value = !0;
  }, Y = (S, P) => {
    if (t.autoPosition) {
      const { left: X, width: m } = M(S), { left: N, right: x } = P.getBoundingClientRect();
      return N <= 0 || N <= X ? T(X) : x >= document.documentElement.clientWidth ? B(X, m) : U(X, m);
    }
  }, q = (S, P) => {
    const { height: X } = P.getBoundingClientRect(), { top: m, height: N } = S.getBoundingClientRect(), oe = window.innerHeight - m - N, Q = m;
    return X <= oe ? C(S, P) : X > oe && X <= Q ? V(S, P) : oe >= Q ? C(S, P) : V(S, P);
  }, z = () => {
    const S = $e(n), P = $e(e);
    if (S && P)
      return t.autoPosition ? q(S, P) : C(S, P);
  }, ee = function(S) {
    if (S) {
      const P = S.scrollHeight > S.clientHeight, m = window.getComputedStyle(S).overflowY.indexOf("hidden") !== -1;
      return P && !m;
    }
    return !0;
  }, le = function(S) {
    return !S || S === document.body || S.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? window : ee(S) ? S : le(S.parentNode);
  };
  return { openOnTop: f, menuPosition: s, setMenuPosition: Z, setInitialPosition: v, getScrollableParent: le };
}, ct = [
  { name: "clock-icon", use: ["time", "calendar"] },
  { name: "arrow-left", use: ["month-year", "calendar"] },
  { name: "arrow-right", use: ["month-year", "calendar"] },
  { name: "arrow-up", use: ["time", "calendar"] },
  { name: "arrow-down", use: ["time", "calendar"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar"] },
  { name: "day", use: ["calendar"] },
  { name: "month-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay", use: ["month-year"] },
  { name: "month-overlay", use: ["month-year"] },
  { name: "month-overlay-header", use: ["month-year"] },
  { name: "year-overlay-header", use: ["month-year"] },
  { name: "hours-overlay-value", use: ["calendar", "time"] },
  { name: "minutes-overlay-value", use: ["calendar", "time"] },
  { name: "seconds-overlay-value", use: ["calendar", "time"] },
  { name: "hours", use: ["calendar", "time"] },
  { name: "minutes", use: ["calendar", "time"] },
  { name: "month", use: ["calendar", "month-year"] },
  { name: "year", use: ["calendar", "month-year"] },
  { name: "action-select", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar"] },
  { name: "marker-tooltip", use: ["calendar"] },
  { name: "now-button", use: [] },
  { name: "time-picker-overlay", use: ["calendar", "time"] },
  { name: "am-pm-button", use: ["calendar", "time"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year"] },
  { name: "time-picker", use: ["menu"] },
  { name: "action-row", use: ["action"] }
], tr = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], nr = {
  all: () => ct,
  monthYear: () => ct.filter((e) => e.use.includes("month-year")),
  input: () => tr,
  timePicker: () => ct.filter((e) => e.use.includes("time")),
  action: () => ct.filter((e) => e.use.includes("action")),
  calendar: () => ct.filter((e) => e.use.includes("calendar")),
  menu: () => ct.filter((e) => e.use.includes("menu"))
}, it = (e, n, a) => {
  const t = [];
  return nr[n]().forEach((s) => {
    e[s.name] && t.push(s.name);
  }), a && a.length && a.forEach((s) => {
    s.slot && t.push(s.slot);
  }), t;
}, Ft = (e) => ({ transitionName: E(() => (a) => e && typeof e != "boolean" ? a ? e.open : e.close : ""), showTransition: !!e }), nt = {
  multiCalendars: { type: [Boolean, Number, String], default: null },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  closeOnScroll: { type: Boolean, default: !1 },
  autoPosition: { type: Boolean, default: !0 },
  closeOnAutoApply: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  multiCalendarsSolo: { type: Boolean, default: !1 },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: () => [] },
  showNowButton: { type: Boolean, default: !1 },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  modeHeight: { type: [Number, String], default: 255 },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetRanges: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  partialFlow: { type: Boolean, default: !1 },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  keepActionRow: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  multiStatic: { type: Boolean, default: !0 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Array, Function],
    default: null
  },
  highlightWeekDays: {
    type: Array,
    default: null
  },
  highlightDisabledDays: { type: Boolean, default: !1 },
  teleport: { type: [String, Boolean], default: null },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function],
    default: null
  },
  calendarClassName: { type: String, default: null },
  noSwipe: { type: Boolean, default: !1 },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: Boolean, default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  inlineWithInput: { type: Boolean, default: !1 },
  textInputOptions: { type: Object, default: () => null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: Boolean, default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: Boolean, default: !1 },
  textInput: { type: Boolean, default: !1 },
  onClickOutside: { type: Function, default: null },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: Boolean, default: !1 }
}, ar = ["aria-label", "aria-disabled", "aria-readonly"], rr = {
  key: 1,
  class: "dp__input_wrap"
}, lr = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "onKeydown"], or = {
  key: 2,
  class: "dp__input_icon"
}, sr = {
  key: 4,
  class: "dp__clear_icon"
}, ir = /* @__PURE__ */ He({
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...nt
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { getDefaultPattern: s, isValidDate: f, defaults: h, getDefaultStartTime: R, assignDefaultTime: B } = Ve(t), T = W(), U = W(null), M = W(!1), v = E(
      () => ({
        dp__pointer: !t.disabled && !t.readonly && !t.textInput,
        dp__disabled: t.disabled,
        dp__input_readonly: !t.textInput,
        dp__input: !0,
        dp__input_icon_pad: !t.hideInputIcon,
        dp__input_valid: t.state,
        dp__input_invalid: t.state === !1,
        dp__input_focus: M.value || t.isMenuOpen,
        dp__input_reg: !t.textInput,
        [t.inputClassName]: !!t.inputClassName
      })
    ), A = () => {
      a("set-input-date", null), t.autoApply && (a("set-empty-date"), T.value = null);
    }, J = (m) => {
      var x;
      const N = R();
      return ca(
        m,
        ((x = h.value.textInputOptions) == null ? void 0 : x.format) || s(),
        N || B({}),
        t.inputValue
      );
    }, Z = (m) => {
      const { rangeSeparator: N } = h.value.textInputOptions, [x, oe] = m.split(`${N}`);
      if (x) {
        const Q = J(x.trim()), I = oe ? J(oe.trim()) : null, l = Q && I ? [Q, I] : [Q];
        T.value = Q ? l : null;
      }
    }, H = (m) => {
      if (t.range)
        Z(m);
      else if (t.multiDates) {
        const N = m.split(";");
        T.value = N.map((x) => J(x.trim())).filter((x) => x);
      } else
        T.value = J(m);
    }, C = (m) => {
      var x;
      const { value: N } = m.target;
      N !== "" ? ((x = h.value.textInputOptions) != null && x.openMenu && !t.isMenuOpen && a("open"), H(N), a("set-input-date", T.value)) : A(), a("update:input-value", N);
    }, V = () => {
      var m, N;
      (m = h.value.textInputOptions) != null && m.enterSubmit && f(T.value) && t.inputValue !== "" ? (a("set-input-date", T.value, !0), T.value = null) : (N = h.value.textInputOptions) != null && N.enterSubmit && t.inputValue === "" && (T.value = null, a("clear"));
    }, Y = () => {
      var m, N;
      (m = h.value.textInputOptions) != null && m.tabSubmit && f(T.value) && t.inputValue !== "" ? (a("set-input-date", T.value, !0), T.value = null) : (N = h.value.textInputOptions) != null && N.tabSubmit && t.inputValue === "" && (T.value = null, a("clear"));
    }, q = () => {
      M.value = !0, a("focus");
    }, z = (m) => {
      var N;
      m.preventDefault(), m.stopImmediatePropagation(), m.stopPropagation(), t.textInput && ((N = h.value.textInputOptions) != null && N.openMenu) && !t.inlineWithInput ? t.isMenuOpen ? h.value.textInputOptions.enterSubmit && a("select-date") : a("open") : t.textInput || a("toggle");
    }, ee = () => {
      M.value = !1, t.isMenuOpen || a("blur"), t.autoApply && t.textInput && T.value && (a("set-input-date", T.value), a("select-date"), T.value = null);
    }, le = () => {
      a("clear");
    }, S = (m) => {
      if (!t.textInput) {
        if (m.code === "Tab")
          return;
        m.preventDefault();
      }
    };
    return n({
      focusInput: () => {
        U.value && U.value.focus({ preventScroll: !0 });
      },
      setParsedDate: (m) => {
        T.value = m;
      }
    }), (m, N) => {
      var x;
      return p(), _("div", {
        onClick: z,
        "aria-label": (x = d(h).ariaLabels) == null ? void 0 : x.input,
        role: "textbox",
        "aria-multiline": "false",
        "aria-disabled": m.disabled,
        "aria-readonly": m.readonly
      }, [
        m.$slots.trigger && !m.$slots["dp-input"] && !m.inline ? K(m.$slots, "trigger", { key: 0 }) : $("", !0),
        !m.$slots.trigger && (!m.inline || m.inlineWithInput) ? (p(), _("div", rr, [
          m.$slots["dp-input"] && !m.$slots.trigger && !m.inline ? K(m.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            onInput: C,
            onEnter: V,
            onTab: Y,
            onClear: le,
            onBlur: ee
          }) : $("", !0),
          m.$slots["dp-input"] ? $("", !0) : (p(), _("input", {
            key: 1,
            ref_key: "inputRef",
            ref: U,
            id: m.uid ? `dp-input-${m.uid}` : void 0,
            name: m.name,
            class: ve(d(v)),
            inputmode: m.textInput ? "text" : "none",
            placeholder: m.placeholder,
            disabled: m.disabled,
            readonly: m.readonly,
            required: m.required,
            value: e.inputValue,
            autocomplete: m.autocomplete,
            onInput: C,
            onKeydown: [
              ue(z, ["enter"]),
              ue(Y, ["tab"]),
              S
            ],
            onBlur: ee,
            onFocus: q,
            onKeypress: S
          }, null, 42, lr)),
          m.$slots["input-icon"] && !m.hideInputIcon ? (p(), _("span", or, [
            K(m.$slots, "input-icon")
          ])) : $("", !0),
          !m.$slots["input-icon"] && !m.hideInputIcon && !m.$slots["dp-input"] ? (p(), fe(d(Et), {
            key: 3,
            class: "dp__input_icon dp__input_icons"
          })) : $("", !0),
          m.$slots["clear-icon"] && e.inputValue && m.clearable && !m.disabled && !m.readonly ? (p(), _("span", sr, [
            K(m.$slots, "clear-icon", { clear: le })
          ])) : $("", !0),
          m.clearable && !m.$slots["clear-icon"] && e.inputValue && !m.disabled && !m.readonly ? (p(), fe(d(da), {
            key: 5,
            class: "dp__clear_icon dp__input_icons",
            "data-test": "clear-icon",
            onClick: Ge(le, ["stop", "prevent"])
          }, null, 8, ["onClick"])) : $("", !0)
        ])) : $("", !0)
      ], 8, ar);
    };
  }
}), ur = { class: "dp__action_row" }, dr = { class: "dp__selection_preview" }, cr = { class: "dp__action_buttons" }, fr = ["onKeydown"], mr = /* @__PURE__ */ He({
  __name: "ActionRow",
  props: {
    menuMount: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...nt
  },
  emits: ["close-picker", "select-date", "invalid-select"],
  setup(e, { emit: n }) {
    const a = e, { formatDate: t, isValidTime: s, defaults: f } = Ve(a), { buildMatrix: h } = tt(), R = W(null), B = W(null);
    Ue(() => {
      a.arrowNavigation && h([$e(R), $e(B)], "actionRow");
    });
    const T = E(() => a.range && !a.partialRange && a.internalModelValue ? a.internalModelValue.length === 2 : !0), U = E(() => !v.value || !A.value || !T.value), M = E(() => ({
      dp__action: !0,
      dp__select: !0,
      dp__action_disabled: U.value
    })), v = E(() => !a.enableTimePicker || a.ignoreTimeValidation ? !0 : s(a.internalModelValue)), A = E(() => a.monthPicker ? a.range && Array.isArray(a.internalModelValue) ? !a.internalModelValue.filter((q) => !C(q)).length : C(a.internalModelValue) : !0), J = () => {
      const Y = f.value.previewFormat;
      return a.timePicker || a.monthPicker, Y(be(a.internalModelValue));
    }, Z = () => {
      const Y = a.internalModelValue;
      return f.value.multiCalendars > 0 ? `${t(Y[0])} - ${t(Y[1])}` : [t(Y[0]), t(Y[1])];
    }, H = E(() => !a.internalModelValue || !a.menuMount ? "" : typeof f.value.previewFormat == "string" ? Array.isArray(a.internalModelValue) ? a.internalModelValue.length === 2 && a.internalModelValue[1] ? Z() : a.multiDates ? a.internalModelValue.map((Y) => `${t(Y)}`) : a.modelAuto ? `${t(a.internalModelValue[0])}` : `${t(a.internalModelValue[0])} -` : t(a.internalModelValue) : J()), C = (Y) => {
      if (!a.monthPicker)
        return !0;
      let q = !0;
      const z = b(pt(Y));
      if (a.minDate && a.maxDate) {
        const ee = b(pt(a.minDate)), le = b(pt(a.maxDate));
        return Oe(z, ee) && Ce(z, le) || me(z, ee) || me(z, le);
      }
      if (a.minDate) {
        const ee = b(pt(a.minDate));
        q = Oe(z, ee) || me(z, ee);
      }
      if (a.maxDate) {
        const ee = b(pt(a.maxDate));
        q = Ce(z, ee) || me(z, ee);
      }
      return q;
    }, V = () => {
      v.value && A.value && T.value ? n("select-date") : n("invalid-select");
    };
    return (Y, q) => (p(), _("div", ur, [
      Y.$slots["action-row"] ? K(Y.$slots, "action-row", Se(De({ key: 0 }, {
        internalModelValue: e.internalModelValue,
        disabled: d(U),
        selectDate: () => Y.$emit("select-date"),
        closePicker: () => Y.$emit("close-picker")
      }))) : (p(), _(ce, { key: 1 }, [
        ne("div", dr, [
          Y.$slots["action-preview"] ? K(Y.$slots, "action-preview", {
            key: 0,
            value: e.internalModelValue
          }) : $("", !0),
          Y.$slots["action-preview"] ? $("", !0) : (p(), _(ce, { key: 1 }, [
            Array.isArray(d(H)) ? $("", !0) : (p(), _(ce, { key: 0 }, [
              We(Ae(d(H)), 1)
            ], 64)),
            Array.isArray(d(H)) ? (p(!0), _(ce, { key: 1 }, we(d(H), (z, ee) => (p(), _("div", { key: ee }, Ae(z), 1))), 128)) : $("", !0)
          ], 64))
        ]),
        ne("div", cr, [
          Y.$slots["action-select"] ? K(Y.$slots, "action-select", {
            key: 0,
            value: e.internalModelValue
          }) : $("", !0),
          Y.$slots["action-select"] ? $("", !0) : (p(), _(ce, { key: 1 }, [
            Y.inline ? $("", !0) : (p(), _("span", {
              key: 0,
              class: "dp__action dp__cancel",
              ref_key: "cancelButtonRef",
              ref: R,
              tabindex: "0",
              onClick: q[0] || (q[0] = (z) => Y.$emit("close-picker")),
              onKeydown: [
                q[1] || (q[1] = ue((z) => Y.$emit("close-picker"), ["enter"])),
                q[2] || (q[2] = ue((z) => Y.$emit("close-picker"), ["space"]))
              ]
            }, Ae(Y.cancelText), 545)),
            ne("span", {
              class: ve(d(M)),
              tabindex: "0",
              onKeydown: [
                ue(V, ["enter"]),
                ue(V, ["space"])
              ],
              onClick: V,
              "data-test": "select-button",
              ref_key: "selectButtonRef",
              ref: B
            }, Ae(Y.selectText), 43, fr)
          ], 64))
        ])
      ], 64))
    ]));
  }
}), vr = ["aria-label"], yr = {
  class: "dp__calendar_header",
  role: "row"
}, gr = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, hr = /* @__PURE__ */ ne("div", { class: "dp__calendar_header_separator" }, null, -1), pr = ["aria-label"], kr = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, wr = { class: "dp__cell_inner" }, br = ["aria-selected", "aria-disabled", "aria-label", "data-test", "onClick", "onKeydown", "onMouseenter", "onMouseleave"], Dr = /* @__PURE__ */ He({
  __name: "Calendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    getWeekNum: {
      type: Function,
      default: () => ""
    },
    specificMode: { type: Boolean, default: !1 },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...nt
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMultiLevelMatrix: s } = tt(), { setDateMonthOrYear: f, defaults: h } = Ve(t), R = W(null), B = W({
      bottom: "",
      left: "",
      transform: ""
    }), T = W([]), U = W(null), M = W(!0), v = W(""), A = W({ startX: 0, endX: 0, startY: 0, endY: 0 }), J = W([]), Z = W({ left: "50%" }), H = E(() => t.dayNames ? Array.isArray(t.dayNames) ? t.dayNames : t.dayNames(t.locale, +t.weekStart) : La(t.locale, +t.weekStart));
    Ue(() => {
      a("mount", { cmp: "calendar", refs: T }), t.noSwipe || U.value && (U.value.addEventListener("touchstart", m, { passive: !1 }), U.value.addEventListener("touchend", N, { passive: !1 }), U.value.addEventListener("touchmove", x, { passive: !1 })), t.monthChangeOnScroll && U.value && U.value.addEventListener("wheel", I, { passive: !1 });
    });
    const C = (l) => l ? t.vertical ? "vNext" : "next" : t.vertical ? "vPrevious" : "previous", V = (l, i) => {
      if (t.transitions) {
        const r = Le(f(b(), t.month, t.year));
        v.value = Oe(Le(f(b(), l, i)), r) ? h.value.transitions[C(!0)] : h.value.transitions[C(!1)], M.value = !1, dt(() => {
          M.value = !0;
        });
      }
    }, Y = E(
      () => ({
        dp__calendar_wrap: !0,
        [t.calendarClassName]: !!t.calendarClassName
      })
    ), q = E(() => (l) => {
      const i = za(l);
      return {
        dp__marker_dot: i.type === "dot",
        dp__marker_line: i.type === "line"
      };
    }), z = E(() => (l) => me(l, R.value)), ee = E(() => ({
      dp__calendar: !0,
      dp__calendar_next: h.value.multiCalendars > 0 && t.instance !== 0
    })), le = E(() => (l) => t.hideOffsetDates ? l.current : !0), S = E(() => t.specificMode ? { height: `${t.modeHeight}px` } : void 0), P = async (l, i, r) => {
      var c, D;
      if (a("set-hover-date", l), (D = (c = l.marker) == null ? void 0 : c.tooltip) != null && D.length) {
        const L = $e(T.value[i][r]);
        if (L) {
          const { width: O, height: g } = L.getBoundingClientRect();
          R.value = l.value;
          let w = { left: `${O / 2}px` }, y = -50;
          if (await dt(), J.value[0]) {
            const { left: F, width: ie } = J.value[0].getBoundingClientRect();
            F < 0 && (w = { left: "0" }, y = 0, Z.value.left = `${O / 2}px`), window.innerWidth < F + ie && (w = { right: "0" }, y = 0, Z.value.left = `${ie - O / 2}px`);
          }
          B.value = {
            bottom: `${g}px`,
            ...w,
            transform: `translateX(${y}%)`
          }, a("tooltip-open", l.marker);
        }
      }
    }, X = (l) => {
      R.value && (R.value = null, B.value = JSON.parse(JSON.stringify({ bottom: "", left: "", transform: "" })), a("tooltip-close", l.marker));
    }, m = (l) => {
      A.value.startX = l.changedTouches[0].screenX, A.value.startY = l.changedTouches[0].screenY;
    }, N = (l) => {
      A.value.endX = l.changedTouches[0].screenX, A.value.endY = l.changedTouches[0].screenY, oe();
    }, x = (l) => {
      t.vertical && !t.inline && l.preventDefault();
    }, oe = () => {
      const l = t.vertical ? "Y" : "X";
      Math.abs(A.value[`start${l}`] - A.value[`end${l}`]) > 10 && a("handle-swipe", A.value[`start${l}`] > A.value[`end${l}`] ? "right" : "left");
    }, Q = (l, i, r) => {
      l && (Array.isArray(T.value[i]) ? T.value[i][r] = l : T.value[i] = [l]), t.arrowNavigation && s(T.value, "calendar");
    }, I = (l) => {
      t.monthChangeOnScroll && (l.preventDefault(), a("handle-scroll", l));
    };
    return n({ triggerTransition: V }), (l, i) => {
      var r;
      return p(), _("div", {
        class: ve(d(ee))
      }, [
        ne("div", {
          style: lt(d(S))
        }, [
          e.specificMode ? $("", !0) : (p(), _("div", {
            key: 0,
            ref_key: "calendarWrapRef",
            ref: U,
            class: ve(d(Y)),
            role: "grid",
            "aria-label": (r = d(h).ariaLabels) == null ? void 0 : r.calendarWrap
          }, [
            ne("div", yr, [
              l.weekNumbers ? (p(), _("div", gr, Ae(l.weekNumName), 1)) : $("", !0),
              (p(!0), _(ce, null, we(d(H), (c, D) => (p(), _("div", {
                class: "dp__calendar_header_item",
                role: "gridcell",
                key: D,
                "data-test": "calendar-header"
              }, [
                l.$slots["calendar-header"] ? K(l.$slots, "calendar-header", {
                  key: 0,
                  day: c,
                  index: D
                }) : $("", !0),
                l.$slots["calendar-header"] ? $("", !0) : (p(), _(ce, { key: 1 }, [
                  We(Ae(c), 1)
                ], 64))
              ]))), 128))
            ]),
            hr,
            Qe(vt, {
              name: v.value,
              css: !!l.transitions
            }, {
              default: se(() => {
                var c;
                return [
                  M.value ? (p(), _("div", {
                    key: 0,
                    class: "dp__calendar",
                    role: "grid",
                    "aria-label": (c = d(h).ariaLabels) == null ? void 0 : c.calendarDays
                  }, [
                    (p(!0), _(ce, null, we(e.mappedDates, (D, L) => (p(), _("div", {
                      class: "dp__calendar_row",
                      role: "row",
                      key: L
                    }, [
                      l.weekNumbers ? (p(), _("div", kr, [
                        ne("div", wr, Ae(e.getWeekNum(D.days)), 1)
                      ])) : $("", !0),
                      (p(!0), _(ce, null, we(D.days, (O, g) => {
                        var w, y, F;
                        return p(), _("div", {
                          role: "gridcell",
                          class: "dp__calendar_item",
                          ref_for: !0,
                          ref: (ie) => Q(ie, L, g),
                          key: g + L,
                          "aria-selected": O.classData.dp__active_date || O.classData.dp__range_start || O.classData.dp__range_start,
                          "aria-disabled": O.classData.dp__cell_disabled,
                          "aria-label": (y = (w = d(h).ariaLabels) == null ? void 0 : w.day) == null ? void 0 : y.call(w, O),
                          tabindex: "0",
                          "data-test": O.value,
                          onClick: Ge((ie) => l.$emit("select-date", O), ["stop", "prevent"]),
                          onKeydown: [
                            ue((ie) => l.$emit("select-date", O), ["enter"]),
                            ue((ie) => l.$emit("handle-space", O), ["space"])
                          ],
                          onMouseenter: (ie) => P(O, L, g),
                          onMouseleave: (ie) => X(O)
                        }, [
                          ne("div", {
                            class: ve(["dp__cell_inner", O.classData])
                          }, [
                            l.$slots.day && d(le)(O) ? K(l.$slots, "day", {
                              key: 0,
                              day: +O.text,
                              date: O.value
                            }) : $("", !0),
                            l.$slots.day ? $("", !0) : (p(), _(ce, { key: 1 }, [
                              We(Ae(O.text), 1)
                            ], 64)),
                            O.marker && d(le)(O) ? (p(), _("div", {
                              key: 2,
                              class: ve(d(q)(O.marker)),
                              style: lt(O.marker.color ? { backgroundColor: O.marker.color } : {})
                            }, null, 6)) : $("", !0),
                            d(z)(O.value) ? (p(), _("div", {
                              key: 3,
                              class: "dp__marker_tooltip",
                              ref_for: !0,
                              ref_key: "activeTooltip",
                              ref: J,
                              style: lt(B.value)
                            }, [
                              (F = O.marker) != null && F.tooltip ? (p(), _("div", {
                                key: 0,
                                class: "dp__tooltip_content",
                                onClick: i[0] || (i[0] = Ge(() => {
                                }, ["stop"]))
                              }, [
                                (p(!0), _(ce, null, we(O.marker.tooltip, (ie, Pe) => (p(), _("div", {
                                  key: Pe,
                                  class: "dp__tooltip_text"
                                }, [
                                  l.$slots["marker-tooltip"] ? K(l.$slots, "marker-tooltip", {
                                    key: 0,
                                    tooltip: ie,
                                    day: O.value
                                  }) : $("", !0),
                                  l.$slots["marker-tooltip"] ? $("", !0) : (p(), _(ce, { key: 1 }, [
                                    ne("div", {
                                      class: "dp__tooltip_mark",
                                      style: lt(ie.color ? { backgroundColor: ie.color } : {})
                                    }, null, 4),
                                    ne("div", null, Ae(ie.text), 1)
                                  ], 64))
                                ]))), 128)),
                                ne("div", {
                                  class: "dp__arrow_bottom_tp",
                                  style: lt(Z.value)
                                }, null, 4)
                              ])) : $("", !0)
                            ], 4)) : $("", !0)
                          ], 2)
                        ], 40, br);
                      }), 128))
                    ]))), 128))
                  ], 8, pr)) : $("", !0)
                ];
              }),
              _: 3
            }, 8, ["name", "css"])
          ], 10, vr))
        ], 4)
      ], 2);
    };
  }
}), $r = ["aria-label", "aria-disabled"], tn = /* @__PURE__ */ He({
  __name: "ActionIcon",
  props: {
    ariaLabel: { type: String, default: "" },
    disabled: { type: Boolean, default: !1 }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: n }) {
    const a = W(null);
    return Ue(() => n("set-ref", a)), (t, s) => (p(), _("div", {
      class: "dp__month_year_col_nav",
      onClick: s[0] || (s[0] = (f) => t.$emit("activate")),
      onKeydown: [
        s[1] || (s[1] = ue((f) => t.$emit("activate"), ["enter"])),
        s[2] || (s[2] = ue((f) => t.$emit("activate"), ["space"]))
      ],
      tabindex: "0",
      role: "button",
      "aria-label": e.ariaLabel,
      "aria-disabled": e.disabled,
      ref_key: "elRef",
      ref: a
    }, [
      ne("div", {
        class: ve(["dp__inner_nav", { dp__inner_nav_disabled: e.disabled }])
      }, [
        K(t.$slots, "default")
      ], 2)
    ], 40, $r));
  }
}), Mr = ["onKeydown"], Tr = { class: "dp__selection_grid_header" }, Ar = ["aria-selected", "aria-disabled", "data-test", "onClick", "onKeydown", "onMouseover"], Sr = ["aria-label", "onKeydown"], Dt = /* @__PURE__ */ He({
  __name: "SelectionGrid",
  props: {
    items: { type: Array, default: () => [] },
    modelValue: { type: [String, Number], default: null },
    multiModelValue: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: [Number, String], default: null },
    maxValue: { type: [Number, String], default: null },
    year: { type: Number, default: 0 },
    skipActive: { type: Boolean, default: !1 },
    headerRefs: { type: Array, default: () => [] },
    skipButtonRef: { type: Boolean, default: !1 },
    monthPicker: { type: Boolean, default: !1 },
    yearPicker: { type: Boolean, default: !1 },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "selected", "toggle", "reset-flow"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setSelectionGrid: s, buildMultiLevelMatrix: f, setMonthPicker: h } = tt(), { hideNavigationButtons: R } = Ve(t), B = W(!1), T = W(null), U = W(null), M = W([]), v = W(), A = W(null), J = W(0), Z = W(null);
    Xn(() => {
      T.value = null;
    }), Ue(() => {
      dt().then(() => P()), C(), H(!0);
    }), On(() => H(!1));
    const H = (I) => {
      var l;
      t.arrowNavigation && ((l = t.headerRefs) != null && l.length ? h(I) : s(I));
    }, C = () => {
      const I = $e(U);
      I && (t.textInput || I.focus({ preventScroll: !0 }), B.value = I.clientHeight < I.scrollHeight);
    }, V = E(
      () => ({
        dp__overlay: !0
      })
    ), Y = E(() => ({
      dp__overlay_col: !0
    })), q = (I) => t.skipActive ? !1 : I.value === t.modelValue, z = E(() => t.items.map((I) => I.filter((l) => l).map((l) => {
      var c, D, L;
      const i = t.disabledValues.some((O) => O === l.value) || S(l.value), r = (c = t.multiModelValue) != null && c.length ? (D = t.multiModelValue) == null ? void 0 : D.some(
        (O) => me(
          O,
          ut(
            t.monthPicker ? Nt(/* @__PURE__ */ new Date(), l.value) : /* @__PURE__ */ new Date(),
            t.monthPicker ? t.year : l.value
          )
        )
      ) : q(l);
      return {
        ...l,
        className: {
          dp__overlay_cell_active: r,
          dp__overlay_cell: !r,
          dp__overlay_cell_disabled: i,
          dp__overlay_cell_active_disabled: i && r,
          dp__overlay_cell_pad: !0,
          dp__cell_in_between: (L = t.multiModelValue) != null && L.length && t.skipActive ? m(l.value) : !1
        }
      };
    }))), ee = E(
      () => ({
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: B.value,
        dp__button_bottom: t.autoApply
      })
    ), le = E(() => {
      var I, l;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((I = t.items) == null ? void 0 : I.length) <= 6,
        dp__container_block: ((l = t.items) == null ? void 0 : l.length) > 6
      };
    }), S = (I) => {
      const l = t.maxValue || t.maxValue === 0, i = t.minValue || t.minValue === 0;
      return !l && !i ? !1 : l && i ? +I > +t.maxValue || +I < +t.minValue : l ? +I > +t.maxValue : i ? +I < +t.minValue : !1;
    }, P = () => {
      const I = $e(T), l = $e(U), i = $e(A), r = $e(Z), c = i ? i.getBoundingClientRect().height : 0;
      l && (J.value = l.getBoundingClientRect().height - c), I && r && (r.scrollTop = I.offsetTop - r.offsetTop - (J.value / 2 - I.getBoundingClientRect().height) - c);
    }, X = (I) => {
      !t.disabledValues.some((l) => l === I) && !S(I) && (a("update:model-value", I), a("selected"));
    }, m = (I) => {
      const l = t.monthPicker ? t.year : I;
      return Wn(
        t.multiModelValue,
        ut(
          t.monthPicker ? Nt(/* @__PURE__ */ new Date(), v.value || 0) : /* @__PURE__ */ new Date(),
          t.monthPicker ? l : v.value || l
        ),
        ut(t.monthPicker ? Nt(/* @__PURE__ */ new Date(), I) : /* @__PURE__ */ new Date(), l)
      );
    }, N = () => {
      a("toggle"), a("reset-flow");
    }, x = () => {
      t.escClose && N();
    }, oe = (I, l, i, r) => {
      I && (l.value === +t.modelValue && !t.disabledValues.includes(l.value) && (T.value = I), t.arrowNavigation && (Array.isArray(M.value[i]) ? M.value[i][r] = I : M.value[i] = [I], Q()));
    }, Q = () => {
      var l, i;
      const I = (l = t.headerRefs) != null && l.length ? [t.headerRefs].concat(M.value) : M.value.concat([t.skipButtonRef ? [] : [A.value]]);
      f(be(I), (i = t.headerRefs) != null && i.length ? "monthPicker" : "selectionGrid");
    };
    return n({ focusGrid: C }), (I, l) => {
      var i;
      return p(), _("div", {
        ref_key: "gridWrapRef",
        ref: U,
        class: ve(d(V)),
        role: "dialog",
        tabindex: "0",
        onKeydown: ue(x, ["esc"])
      }, [
        ne("div", {
          class: ve(d(le)),
          ref_key: "containerRef",
          ref: Z,
          role: "grid",
          style: lt({ height: `${J.value}px` })
        }, [
          ne("div", Tr, [
            K(I.$slots, "header")
          ]),
          I.$slots.overlay ? K(I.$slots, "overlay", { key: 0 }) : (p(!0), _(ce, { key: 1 }, we(d(z), (r, c) => (p(), _("div", {
            class: ve(["dp__overlay_row", { dp__flex_row: d(z).length >= 3 }]),
            key: c,
            role: "row"
          }, [
            (p(!0), _(ce, null, we(r, (D, L) => (p(), _("div", {
              role: "gridcell",
              class: ve(d(Y)),
              key: D.value,
              "aria-selected": D.value === e.modelValue && !e.disabledValues.includes(D.value),
              "aria-disabled": D.className.dp__overlay_cell_disabled,
              ref_for: !0,
              ref: (O) => oe(O, D, c, L),
              tabindex: "0",
              "data-test": D.text,
              onClick: (O) => X(D.value),
              onKeydown: [
                ue((O) => X(D.value), ["enter"]),
                ue((O) => X(D.value), ["space"])
              ],
              onMouseover: (O) => v.value = D.value
            }, [
              ne("div", {
                class: ve(D.className)
              }, [
                I.$slots.item ? K(I.$slots, "item", {
                  key: 0,
                  item: D
                }) : $("", !0),
                I.$slots.item ? $("", !0) : (p(), _(ce, { key: 1 }, [
                  We(Ae(D.text), 1)
                ], 64))
              ], 2)
            ], 42, Ar))), 128))
          ], 2))), 128))
        ], 6),
        I.$slots["button-icon"] ? Ct((p(), _("div", {
          key: 0,
          role: "button",
          "aria-label": (i = e.ariaLabels) == null ? void 0 : i.toggleOverlay,
          class: ve(d(ee)),
          tabindex: "0",
          ref_key: "toggleButton",
          ref: A,
          onClick: N,
          onKeydown: ue(N, ["enter"])
        }, [
          K(I.$slots, "button-icon")
        ], 42, Sr)), [
          [Pt, !d(R)(e.type)]
        ]) : $("", !0)
      ], 42, Mr);
    };
  }
}), Cr = ["aria-label"], Rn = /* @__PURE__ */ He({
  __name: "RegularPicker",
  props: {
    ariaLabel: { type: String, default: "" },
    showSelectionGrid: { type: Boolean, default: !1 },
    modelValue: { type: Number, default: null },
    items: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: Number, default: null },
    maxValue: { type: Number, default: null },
    slotName: { type: String, default: "" },
    overlaySlot: { type: String, default: "" },
    headerRefs: { type: Array, default: () => [] },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    transitions: { type: [Object, Boolean], default: !1 },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "toggle", "set-ref"],
  setup(e, { emit: n }) {
    const a = e, { transitionName: t, showTransition: s } = Ft(a.transitions), f = W(null);
    return Ue(() => n("set-ref", f)), (h, R) => (p(), _(ce, null, [
      ne("div", {
        class: "dp__month_year_select",
        onClick: R[0] || (R[0] = (B) => h.$emit("toggle")),
        onKeydown: [
          R[1] || (R[1] = ue((B) => h.$emit("toggle"), ["enter"])),
          R[2] || (R[2] = ue((B) => h.$emit("toggle"), ["space"]))
        ],
        role: "button",
        "aria-label": e.ariaLabel,
        tabindex: "0",
        ref_key: "elRef",
        ref: f
      }, [
        K(h.$slots, "default")
      ], 40, Cr),
      Qe(vt, {
        name: d(t)(e.showSelectionGrid),
        css: d(s)
      }, {
        default: se(() => [
          e.showSelectionGrid ? (p(), fe(Dt, De({ key: 0 }, {
            modelValue: e.modelValue,
            items: e.items,
            disabledValues: e.disabledValues,
            minValue: e.minValue,
            maxValue: e.maxValue,
            escClose: e.escClose,
            type: e.type,
            arrowNavigation: e.arrowNavigation,
            textInput: e.textInput,
            autoApply: e.autoApply,
            ariaLabels: e.ariaLabels,
            hideNavigation: e.hideNavigation
          }, {
            "header-refs": [],
            "onUpdate:modelValue": R[3] || (R[3] = (B) => h.$emit("update:model-value", B)),
            onToggle: R[4] || (R[4] = (B) => h.$emit("toggle"))
          }), Ie({
            "button-icon": se(() => [
              h.$slots["calendar-icon"] ? K(h.$slots, "calendar-icon", { key: 0 }) : $("", !0),
              h.$slots["calendar-icon"] ? $("", !0) : (p(), fe(d(Et), { key: 1 }))
            ]),
            _: 2
          }, [
            h.$slots[e.slotName] ? {
              name: "item",
              fn: se(({ item: B }) => [
                K(h.$slots, e.slotName, { item: B })
              ]),
              key: "0"
            } : void 0,
            h.$slots[e.overlaySlot] ? {
              name: "overlay",
              fn: se(() => [
                K(h.$slots, e.overlaySlot)
              ]),
              key: "1"
            } : void 0,
            h.$slots[`${e.overlaySlot}-header`] ? {
              name: "header",
              fn: se(() => [
                K(h.$slots, `${e.overlaySlot}-header`)
              ]),
              key: "2"
            } : void 0
          ]), 1040)) : $("", !0)
        ]),
        _: 3
      }, 8, ["name", "css"])
    ], 64));
  }
}), Pr = { class: "dp__month_year_row" }, _r = { class: "dp__month_year_wrap" }, Nr = { class: "dp__month_picker_header" }, Rr = ["aria-label"], Or = ["aria-label"], Ir = ["aria-label"], Br = /* @__PURE__ */ He({
  __name: "MonthYearPicker",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    internalModelValue: { type: [Date, Array], default: null },
    ...nt
  },
  emits: ["update-month-year", "month-year-select", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { defaults: s } = Ve(t), { transitionName: f, showTransition: h } = Ft(s.value.transitions), { buildMatrix: R } = tt(), { handleMonthYearChange: B, isDisabled: T, updateMonthYear: U } = Qa(t, a), M = W(!1), v = W(!1), A = W([null, null, null, null]), J = W(null), Z = W(null), H = W(null);
    Ue(() => {
      a("mount");
    });
    const C = (g) => ({
      get: () => t[g],
      set: (w) => {
        const y = g === "month" ? "year" : "month";
        a("update-month-year", { [g]: w, [y]: t[y] }), a("month-year-select", g === "year"), g === "month" ? r(!0) : c(!0);
      }
    }), V = E(C("month")), Y = E(C("year")), q = (g) => {
      const w = ke(b(g));
      return t.year === w;
    }, z = E(() => t.monthPicker ? Array.isArray(t.disabledDates) ? t.disabledDates.map((g) => b(g)).filter((g) => q(g)).map((g) => pe(g)) : [] : []), ee = E(() => (g) => {
      const w = g === "month";
      return {
        showSelectionGrid: (w ? M : v).value,
        items: (w ? Q : I).value,
        disabledValues: s.value.filters[w ? "months" : "years"].concat(z.value),
        minValue: (w ? X : S).value,
        maxValue: (w ? m : P).value,
        headerRefs: w && t.monthPicker ? [J.value, Z.value, H.value] : [],
        escClose: t.escClose,
        transitions: s.value.transitions,
        ariaLabels: s.value.ariaLabels,
        textInput: t.textInput,
        autoApply: t.autoApply,
        arrowNavigation: t.arrowNavigation,
        hideNavigation: t.hideNavigation
      };
    }), le = E(() => (g) => ({
      month: t.month,
      year: t.year,
      items: g === "month" ? t.months : t.years,
      instance: t.instance,
      updateMonthYear: U,
      toggle: g === "month" ? r : c
    })), S = E(() => t.minDate ? ke(b(t.minDate)) : null), P = E(() => t.maxDate ? ke(b(t.maxDate)) : null), X = E(() => {
      if (t.minDate && S.value) {
        if (S.value > t.year)
          return 12;
        if (S.value === t.year)
          return pe(b(t.minDate));
      }
      return null;
    }), m = E(() => t.maxDate && P.value ? P.value < t.year ? -1 : P.value === t.year ? pe(b(t.maxDate)) : null : null), N = E(() => (t.range || t.multiDates) && t.internalModelValue && (t.monthPicker || t.yearPicker) ? t.internalModelValue : []), x = (g) => {
      const w = [], y = (F) => F;
      for (let F = 0; F < g.length; F += 3) {
        const ie = [g[F], g[F + 1], g[F + 2]];
        w.push(y(ie));
      }
      return w;
    }, oe = E(() => {
      const g = t.months.find((w) => w.value === t.month);
      return g || { text: "", value: 0 };
    }), Q = E(() => x(t.months)), I = E(() => x(t.years)), l = E(() => s.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === 0 : !0), i = E(() => s.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === s.value.multiCalendars - 1 : !0), r = (g = !1) => {
      D(g), M.value = !M.value, M.value || a("overlay-closed");
    }, c = (g = !1) => {
      D(g), v.value = !v.value, v.value || a("overlay-closed");
    }, D = (g) => {
      g || a("reset-flow");
    }, L = (g = !1) => {
      T.value(g) || a("update-month-year", {
        year: g ? t.year + 1 : t.year - 1,
        month: t.month,
        fromNav: !0
      });
    }, O = (g, w) => {
      t.arrowNavigation && (A.value[w] = $e(g), R(A.value, "monthYear"));
    };
    return n({
      toggleMonthPicker: r,
      toggleYearPicker: c,
      handleMonthYearChange: B
    }), (g, w) => {
      var y, F, ie, Pe, Ze;
      return p(), _("div", Pr, [
        g.$slots["month-year"] ? K(g.$slots, "month-year", Se(De({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: d(U), handleMonthYearChange: d(B), instance: e.instance }))) : (p(), _(ce, { key: 1 }, [
          !g.monthPicker && !g.yearPicker ? (p(), _(ce, { key: 0 }, [
            d(l) && !g.vertical ? (p(), fe(tn, {
              key: 0,
              "aria-label": (y = d(s).ariaLabels) == null ? void 0 : y.prevMonth,
              disabled: d(T)(!1),
              onActivate: w[0] || (w[0] = (re) => d(B)(!1)),
              onSetRef: w[1] || (w[1] = (re) => O(re, 0))
            }, {
              default: se(() => [
                g.$slots["arrow-left"] ? K(g.$slots, "arrow-left", { key: 0 }) : $("", !0),
                g.$slots["arrow-left"] ? $("", !0) : (p(), fe(d(hn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : $("", !0),
            ne("div", _r, [
              Qe(Rn, De({
                type: "month",
                "slot-name": "month-overlay-val",
                "overlay-slot": "overlay-month",
                "aria-label": (F = d(s).ariaLabels) == null ? void 0 : F.openMonthsOverlay,
                modelValue: d(V),
                "onUpdate:modelValue": w[2] || (w[2] = (re) => ot(V) ? V.value = re : null)
              }, d(ee)("month"), {
                onToggle: r,
                onSetRef: w[3] || (w[3] = (re) => O(re, 1))
              }), Ie({
                default: se(() => [
                  g.$slots.month ? K(g.$slots, "month", Se(De({ key: 0 }, d(oe)))) : $("", !0),
                  g.$slots.month ? $("", !0) : (p(), _(ce, { key: 1 }, [
                    We(Ae(d(oe).text), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                g.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: se(() => [
                    K(g.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                g.$slots["month-overlay-value"] ? {
                  name: "month-overlay-val",
                  fn: se(({ item: re }) => [
                    K(g.$slots, "month-overlay-value", {
                      text: re.text,
                      value: re.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                g.$slots["month-overlay"] ? {
                  name: "overlay-month",
                  fn: se(() => [
                    K(g.$slots, "month-overlay", Se(Fe(d(le)("month"))))
                  ]),
                  key: "2"
                } : void 0,
                g.$slots["month-overlay-header"] ? {
                  name: "overlay-month-header",
                  fn: se(() => [
                    K(g.$slots, "month-overlay-header", { toggle: r })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"]),
              Qe(Rn, De({
                type: "year",
                "slot-name": "year-overlay-val",
                "overlay-slot": "overlay-year",
                "aria-label": (ie = d(s).ariaLabels) == null ? void 0 : ie.openYearsOverlay,
                modelValue: d(Y),
                "onUpdate:modelValue": w[4] || (w[4] = (re) => ot(Y) ? Y.value = re : null)
              }, d(ee)("year"), {
                onToggle: c,
                onSetRef: w[5] || (w[5] = (re) => O(re, 2))
              }), Ie({
                default: se(() => [
                  g.$slots.year ? K(g.$slots, "year", {
                    key: 0,
                    year: e.year
                  }) : $("", !0),
                  g.$slots.year ? $("", !0) : (p(), _(ce, { key: 1 }, [
                    We(Ae(e.year), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                g.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: se(() => [
                    K(g.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                g.$slots["year-overlay-value"] ? {
                  name: "year-overlay-val",
                  fn: se(({ item: re }) => [
                    K(g.$slots, "year-overlay-value", {
                      text: re.text,
                      value: re.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                g.$slots["year-overlay"] ? {
                  name: "overlay-year",
                  fn: se(() => [
                    K(g.$slots, "year-overlay", Se(Fe(d(le)("year"))))
                  ]),
                  key: "2"
                } : void 0,
                g.$slots["year-overlay-header"] ? {
                  name: "overlay-year-header",
                  fn: se(() => [
                    K(g.$slots, "year-overlay-header", { toggle: c })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"])
            ]),
            d(l) && g.vertical ? (p(), fe(tn, {
              key: 1,
              "aria-label": (Pe = d(s).ariaLabels) == null ? void 0 : Pe.prevMonth,
              disabled: d(T)(!1),
              onActivate: w[6] || (w[6] = (re) => d(B)(!1))
            }, {
              default: se(() => [
                g.$slots["arrow-up"] ? K(g.$slots, "arrow-up", { key: 0 }) : $("", !0),
                g.$slots["arrow-up"] ? $("", !0) : (p(), fe(d(Un), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : $("", !0),
            d(i) ? (p(), fe(tn, {
              key: 2,
              ref: "rightIcon",
              disabled: d(T)(!0),
              "aria-label": (Ze = d(s).ariaLabels) == null ? void 0 : Ze.nextMonth,
              onActivate: w[7] || (w[7] = (re) => d(B)(!0)),
              onSetRef: w[8] || (w[8] = (re) => O(re, 3))
            }, {
              default: se(() => [
                g.$slots[g.vertical ? "arrow-down" : "arrow-right"] ? K(g.$slots, g.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : $("", !0),
                g.$slots[g.vertical ? "arrow-down" : "arrow-right"] ? $("", !0) : (p(), fe(In(g.vertical ? d(Hn) : d(pn)), { key: 1 }))
              ]),
              _: 3
            }, 8, ["disabled", "aria-label"])) : $("", !0)
          ], 64)) : $("", !0),
          g.monthPicker ? (p(), fe(Dt, De({ key: 1 }, d(ee)("month"), {
            "skip-active": g.range,
            year: e.year,
            "multi-model-value": d(N),
            "month-picker": "",
            modelValue: d(V),
            "onUpdate:modelValue": w[17] || (w[17] = (re) => ot(V) ? V.value = re : null),
            onToggle: r,
            onSelected: w[18] || (w[18] = (re) => g.$emit("overlay-closed"))
          }), Ie({
            header: se(() => {
              var re, Xe, ze;
              return [
                ne("div", Nr, [
                  ne("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpPrevIconRef",
                    ref: J,
                    onClick: w[9] || (w[9] = (_e) => L(!1)),
                    onKeydown: w[10] || (w[10] = ue((_e) => L(!1), ["enter"]))
                  }, [
                    ne("div", {
                      class: ve(["dp__inner_nav", { dp__inner_nav_disabled: d(T)(!1) }]),
                      role: "button",
                      "aria-label": (re = d(s).ariaLabels) == null ? void 0 : re.prevMonth
                    }, [
                      g.$slots["arrow-left"] ? K(g.$slots, "arrow-left", { key: 0 }) : $("", !0),
                      g.$slots["arrow-left"] ? $("", !0) : (p(), fe(d(hn), { key: 1 }))
                    ], 10, Rr)
                  ], 544),
                  ne("div", {
                    class: "dp__pointer",
                    role: "button",
                    ref_key: "mpYearButtonRef",
                    ref: Z,
                    "aria-label": (Xe = d(s).ariaLabels) == null ? void 0 : Xe.openYearsOverlay,
                    tabindex: "0",
                    onClick: w[11] || (w[11] = () => c(!1)),
                    onKeydown: w[12] || (w[12] = ue(() => c(!1), ["enter"]))
                  }, [
                    g.$slots.year ? K(g.$slots, "year", {
                      key: 0,
                      year: e.year
                    }) : $("", !0),
                    g.$slots.year ? $("", !0) : (p(), _(ce, { key: 1 }, [
                      We(Ae(e.year), 1)
                    ], 64))
                  ], 40, Or),
                  ne("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpNextIconRef",
                    ref: H,
                    onClick: w[13] || (w[13] = (_e) => L(!0)),
                    onKeydown: w[14] || (w[14] = ue((_e) => L(!0), ["enter"]))
                  }, [
                    ne("div", {
                      class: ve(["dp__inner_nav", { dp__inner_nav_disabled: d(T)(!0) }]),
                      role: "button",
                      "aria-label": (ze = d(s).ariaLabels) == null ? void 0 : ze.nextMonth
                    }, [
                      g.$slots["arrow-right"] ? K(g.$slots, "arrow-right", { key: 0 }) : $("", !0),
                      g.$slots["arrow-right"] ? $("", !0) : (p(), fe(d(pn), { key: 1 }))
                    ], 10, Ir)
                  ], 544)
                ]),
                Qe(vt, {
                  name: d(f)(v.value),
                  css: d(h)
                }, {
                  default: se(() => [
                    v.value ? (p(), fe(Dt, De({ key: 0 }, d(ee)("year"), {
                      modelValue: d(Y),
                      "onUpdate:modelValue": w[15] || (w[15] = (_e) => ot(Y) ? Y.value = _e : null),
                      onToggle: c,
                      onSelected: w[16] || (w[16] = (_e) => g.$emit("overlay-closed"))
                    }), Ie({
                      "button-icon": se(() => [
                        g.$slots["calendar-icon"] ? K(g.$slots, "calendar-icon", { key: 0 }) : $("", !0),
                        g.$slots["calendar-icon"] ? $("", !0) : (p(), fe(d(Et), { key: 1 }))
                      ]),
                      _: 2
                    }, [
                      g.$slots["year-overlay-value"] ? {
                        name: "item",
                        fn: se(({ item: _e }) => [
                          K(g.$slots, "year-overlay-value", {
                            text: _e.text,
                            value: _e.value
                          })
                        ]),
                        key: "0"
                      } : void 0
                    ]), 1040, ["modelValue"])) : $("", !0)
                  ]),
                  _: 3
                }, 8, ["name", "css"])
              ];
            }),
            _: 2
          }, [
            g.$slots["month-overlay-value"] ? {
              name: "item",
              fn: se(({ item: re }) => [
                K(g.$slots, "month-overlay-value", {
                  text: re.text,
                  value: re.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["skip-active", "year", "multi-model-value", "modelValue"])) : $("", !0),
          g.yearPicker ? (p(), fe(Dt, De({ key: 2 }, d(ee)("year"), {
            modelValue: d(Y),
            "onUpdate:modelValue": w[19] || (w[19] = (re) => ot(Y) ? Y.value = re : null),
            "multi-model-value": d(N),
            "skip-active": g.range,
            "skip-button-ref": "",
            "year-picker": "",
            onToggle: c,
            onSelected: w[20] || (w[20] = (re) => g.$emit("overlay-closed"))
          }), Ie({ _: 2 }, [
            g.$slots["year-overlay-value"] ? {
              name: "item",
              fn: se(({ item: re }) => [
                K(g.$slots, "year-overlay-value", {
                  text: re.text,
                  value: re.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["modelValue", "multi-model-value", "skip-active"])) : $("", !0)
        ], 64))
      ]);
    };
  }
}), Yr = {
  key: 0,
  class: "dp__time_input"
}, Vr = ["aria-label", "onKeydown", "onClick"], Er = ["aria-label", "data-test", "onKeydown", "onClick"], Fr = ["aria-label", "onKeydown", "onClick"], Lr = { key: 0 }, Ur = ["aria-label", "onKeydown"], Hr = /* @__PURE__ */ He({
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    ...nt
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setTimePickerElements: s, setTimePickerBackRef: f } = tt(), { defaults: h } = Ve(t), { transitionName: R, showTransition: B } = Ft(h.value.transitions), T = Mt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), U = W("AM"), M = W(null), v = W([]);
    Ue(() => {
      a("mounted");
    });
    const A = E(() => (l) => !!(t.maxTime && t.maxTime[l] && t.maxTime[l] < t[l] + +t[`${l}Increment`])), J = E(() => (l) => !!(t.minTime && t.minTime[l] && t.minTime[l] > t[l] - +t[`${l}Increment`])), Z = (l, i) => Fn(Te(b(), l), i), H = (l, i) => ua(Te(b(), l), i), C = E(
      () => ({
        dp__time_col: !0,
        dp__time_col_reg: !t.enableSeconds && t.is24,
        dp__time_col_reg_with_button: !t.enableSeconds && !t.is24,
        dp__time_col_sec: t.enableSeconds && t.is24,
        dp__time_col_sec_with_button: t.enableSeconds && !t.is24
      })
    ), V = E(() => {
      const l = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return t.enableSeconds ? l.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : l;
    }), Y = E(() => V.value.filter((l) => !l.separator)), q = E(() => (l) => {
      if (l === "hours") {
        const i = N(t.hours);
        return { text: i < 10 ? `0${i}` : `${i}`, value: i };
      }
      return { text: t[l] < 10 ? `0${t[l]}` : `${t[l]}`, value: t[l] };
    }), z = (l) => {
      const i = t.is24 ? 24 : 12, r = l === "hours" ? i : 60, c = +t[`${l}GridIncrement`], D = l === "hours" && !t.is24 ? c : 0, L = [];
      for (let O = D; O < r; O += c)
        L.push({ value: O, text: O < 10 ? `0${O}` : `${O}` });
      return l === "hours" && !t.is24 && L.push({ value: 0, text: "12" }), Fa(L);
    }, ee = (l, i) => {
      const r = t.minTime && t.minTime[i], c = t.maxTime && t.maxTime[i];
      return r && c ? l < r || l > c : r ? l < r : c ? l > c : !1;
    }, le = E(() => (l) => z(l).flat().filter((r) => r).map((r) => r.value).filter((r) => ee(r, l))), S = (l) => t[`no${l[0].toUpperCase() + l.slice(1)}Overlay`], P = (l) => {
      S(l) || (T[l] = !T[l], T[l] || a("overlay-closed"));
    }, X = (l) => l === "hours" ? Ke : l === "minutes" ? je : mt, m = (l, i = !0) => {
      const r = i ? Z : H;
      (i ? A.value(l) : J.value(l)) || a(
        `update:${l}`,
        X(l)(r({ [l]: +t[l] }, { [l]: +t[`${l}Increment`] }))
      );
    }, N = (l) => t.is24 ? l : (l >= 12 ? U.value = "PM" : U.value = "AM", Wa(l)), x = () => {
      U.value === "PM" ? (U.value = "AM", a("update:hours", t.hours - 12)) : (U.value = "PM", a("update:hours", t.hours + 12));
    }, oe = (l) => {
      T[l] = !0;
    }, Q = (l, i, r) => {
      if (l && t.arrowNavigation) {
        Array.isArray(v.value[i]) ? v.value[i][r] = l : v.value[i] = [l];
        const c = v.value.reduce(
          (D, L) => L.map((O, g) => [...D[g] || [], L[g]]),
          []
        );
        f(t.closeTimePickerBtn), M.value && (c[1] = c[1].concat(M.value)), s(c, t.order);
      }
    }, I = (l, i) => l === "hours" && !t.is24 ? a(`update:${l}`, U.value === "PM" ? i + 12 : i) : a(`update:${l}`, i);
    return n({ openChildCmp: oe }), (l, i) => {
      var r;
      return l.disabled ? $("", !0) : (p(), _("div", Yr, [
        (p(!0), _(ce, null, we(d(V), (c, D) => {
          var L, O, g;
          return p(), _("div", {
            key: D,
            class: ve(d(C))
          }, [
            c.separator ? (p(), _(ce, { key: 0 }, [
              We(" : ")
            ], 64)) : (p(), _(ce, { key: 1 }, [
              ne("div", {
                class: ve({
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: d(A)(c.type)
                }),
                role: "button",
                "data-test": "time-inc-btn",
                "aria-label": (L = d(h).ariaLabels) == null ? void 0 : L.incrementValue(c.type),
                tabindex: "0",
                onKeydown: [
                  ue((w) => m(c.type), ["enter"]),
                  ue((w) => m(c.type), ["space"])
                ],
                onClick: (w) => m(c.type),
                ref_for: !0,
                ref: (w) => Q(w, D, 0)
              }, [
                l.$slots["arrow-up"] ? K(l.$slots, "arrow-up", { key: 0 }) : $("", !0),
                l.$slots["arrow-up"] ? $("", !0) : (p(), fe(d(Un), { key: 1 }))
              ], 42, Vr),
              ne("div", {
                role: "button",
                "aria-label": (O = d(h).ariaLabels) == null ? void 0 : O.openTpOverlay(c.type),
                class: ve(S(c.type) ? "" : "dp__time_display"),
                tabindex: "0",
                "data-test": `${c.type}-toggle-overlay-btn`,
                onKeydown: [
                  ue((w) => P(c.type), ["enter"]),
                  ue((w) => P(c.type), ["space"])
                ],
                onClick: (w) => P(c.type),
                ref_for: !0,
                ref: (w) => Q(w, D, 1)
              }, [
                l.$slots[c.type] ? K(l.$slots, c.type, {
                  key: 0,
                  text: d(q)(c.type).text,
                  value: d(q)(c.type).value
                }) : $("", !0),
                l.$slots[c.type] ? $("", !0) : (p(), _(ce, { key: 1 }, [
                  We(Ae(d(q)(c.type).text), 1)
                ], 64))
              ], 42, Er),
              ne("div", {
                class: ve({
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: d(J)(c.type)
                }),
                role: "button",
                "data-test": "time-dec-btn",
                "aria-label": (g = d(h).ariaLabels) == null ? void 0 : g.decrementValue(c.type),
                tabindex: "0",
                onKeydown: [
                  ue((w) => m(c.type, !1), ["enter"]),
                  ue((w) => m(c.type, !1), ["space"])
                ],
                onClick: (w) => m(c.type, !1),
                ref_for: !0,
                ref: (w) => Q(w, D, 2)
              }, [
                l.$slots["arrow-down"] ? K(l.$slots, "arrow-down", { key: 0 }) : $("", !0),
                l.$slots["arrow-down"] ? $("", !0) : (p(), fe(d(Hn), { key: 1 }))
              ], 42, Fr)
            ], 64))
          ], 2);
        }), 128)),
        l.is24 ? $("", !0) : (p(), _("div", Lr, [
          l.$slots["am-pm-button"] ? K(l.$slots, "am-pm-button", {
            key: 0,
            toggle: x,
            value: U.value
          }) : $("", !0),
          l.$slots["am-pm-button"] ? $("", !0) : (p(), _("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: M,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (r = d(h).ariaLabels) == null ? void 0 : r.amPmButton,
            tabindex: "0",
            onClick: x,
            onKeydown: [
              ue(Ge(x, ["prevent"]), ["enter"]),
              ue(Ge(x, ["prevent"]), ["space"])
            ]
          }, Ae(U.value), 41, Ur))
        ])),
        (p(!0), _(ce, null, we(d(Y), (c, D) => (p(), fe(vt, {
          key: D,
          name: d(R)(T[c.type]),
          css: d(B)
        }, {
          default: se(() => [
            T[c.type] ? (p(), fe(Dt, {
              key: 0,
              items: z(c.type),
              "disabled-values": d(h).filters.times[c.type].concat(d(le)(c.type)),
              "esc-close": l.escClose,
              "aria-labels": d(h).ariaLabels,
              "hide-navigation": l.hideNavigation,
              "onUpdate:modelValue": (L) => I(c.type, L),
              onSelected: (L) => P(c.type),
              onToggle: (L) => P(c.type),
              onResetFlow: i[0] || (i[0] = (L) => l.$emit("reset-flow")),
              type: c.type
            }, Ie({
              "button-icon": se(() => [
                l.$slots["clock-icon"] ? K(l.$slots, "clock-icon", { key: 0 }) : $("", !0),
                l.$slots["clock-icon"] ? $("", !0) : (p(), fe(d(Ln), { key: 1 }))
              ]),
              _: 2
            }, [
              l.$slots[`${c.type}-overlay-value`] ? {
                name: "item",
                fn: se(({ item: L }) => [
                  K(l.$slots, `${c.type}-overlay-value`, {
                    text: L.text,
                    value: L.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "disabled-values", "esc-close", "aria-labels", "hide-navigation", "onUpdate:modelValue", "onSelected", "onToggle", "type"])) : $("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), Wr = ["aria-label"], zr = { class: "dp__overlay_container dp__container_flex dp__time_picker_overlay_container" }, xr = {
  key: 1,
  class: "dp__overlay_row dp__flex_row"
}, Kr = ["aria-label"], jr = /* @__PURE__ */ He({
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    internalModelValue: { type: [Date, Array], default: null },
    ...nt
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-opened",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMatrix: s, setTimePicker: f } = tt(), h = on(), { hideNavigationButtons: R, defaults: B } = Ve(t), { transitionName: T, showTransition: U } = Ft(B.value.transitions), M = W(null), v = W(null), A = W([]), J = W(null);
    Ue(() => {
      a("mount"), !t.timePicker && t.arrowNavigation ? s([$e(M.value)], "time") : f(!0, t.timePicker);
    });
    const Z = E(() => t.range && t.modelAuto ? jn(t.internalModelValue) : !0), H = W(!1), C = (m) => ({
      hours: Array.isArray(t.hours) ? t.hours[m] : t.hours,
      minutes: Array.isArray(t.minutes) ? t.minutes[m] : t.minutes,
      seconds: Array.isArray(t.seconds) ? t.seconds[m] : t.seconds
    }), V = E(() => {
      const m = [];
      if (t.range)
        for (let N = 0; N < 2; N++)
          m.push(C(N));
      else
        m.push(C(0));
      return m;
    }), Y = (m, N = !1, x = "") => {
      N || a("reset-flow"), H.value = m, m && a("overlay-opened"), t.arrowNavigation && (f(m), m || a("overlay-closed")), dt(() => {
        x !== "" && A.value[0] && A.value[0].openChildCmp(x);
      });
    }, q = E(() => ({
      dp__button: !0,
      dp__button_bottom: t.autoApply
    })), z = it(h, "timePicker"), ee = (m, N, x) => t.range ? N === 0 ? [m, V.value[1][x]] : [V.value[0][x], m] : m, le = (m) => {
      a("update:hours", m);
    }, S = (m) => {
      a("update:minutes", m);
    }, P = (m) => {
      a("update:seconds", m);
    }, X = () => {
      J.value && t.arrowNavigation && J.value.focus({ preventScroll: !0 });
    };
    return n({ toggleTimePicker: Y }), (m, N) => {
      var x;
      return p(), _("div", null, [
        m.timePicker ? $("", !0) : Ct((p(), _("div", {
          key: 0,
          class: ve(d(q)),
          role: "button",
          "aria-label": (x = d(B).ariaLabels) == null ? void 0 : x.openTimePicker,
          tabindex: "0",
          "data-test": "open-time-picker-btn",
          ref_key: "openTimePickerBtn",
          ref: M,
          onKeydown: [
            N[0] || (N[0] = ue((oe) => Y(!0), ["enter"])),
            N[1] || (N[1] = ue((oe) => Y(!0), ["space"]))
          ],
          onClick: N[2] || (N[2] = (oe) => Y(!0))
        }, [
          m.$slots["clock-icon"] ? K(m.$slots, "clock-icon", { key: 0 }) : $("", !0),
          m.$slots["clock-icon"] ? $("", !0) : (p(), fe(d(Ln), { key: 1 }))
        ], 42, Wr)), [
          [Pt, !d(R)("time")]
        ]),
        Qe(vt, {
          name: d(T)(H.value),
          css: d(U)
        }, {
          default: se(() => {
            var oe;
            return [
              H.value || m.timePicker ? (p(), _("div", {
                key: 0,
                class: "dp__overlay",
                ref_key: "overlayRef",
                ref: J,
                tabindex: "0"
              }, [
                ne("div", zr, [
                  m.$slots["time-picker-overlay"] ? K(m.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: le,
                    setMinutes: S,
                    setSeconds: P
                  }) : $("", !0),
                  m.$slots["time-picker-overlay"] ? $("", !0) : (p(), _("div", xr, [
                    (p(!0), _(ce, null, we(d(V), (Q, I) => Ct((p(), fe(Hr, De({ key: I }, {
                      ...m.$props,
                      order: I,
                      hours: Q.hours,
                      minutes: Q.minutes,
                      seconds: Q.seconds,
                      closeTimePickerBtn: v.value,
                      disabled: I === 0 ? m.fixedStart : m.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: A,
                      "onUpdate:hours": (l) => le(ee(l, I, "hours")),
                      "onUpdate:minutes": (l) => S(ee(l, I, "minutes")),
                      "onUpdate:seconds": (l) => P(ee(l, I, "seconds")),
                      onMounted: X,
                      onOverlayClosed: X
                    }), Ie({ _: 2 }, [
                      we(d(z), (l, i) => ({
                        name: l,
                        fn: se((r) => [
                          K(m.$slots, l, Se(Fe(r)))
                        ])
                      }))
                    ]), 1040, ["onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [Pt, I === 0 ? !0 : d(Z)]
                    ])), 128))
                  ])),
                  m.timePicker ? $("", !0) : Ct((p(), _("div", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: v,
                    class: ve(d(q)),
                    role: "button",
                    "aria-label": (oe = d(B).ariaLabels) == null ? void 0 : oe.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      N[3] || (N[3] = ue((Q) => Y(!1), ["enter"])),
                      N[4] || (N[4] = ue((Q) => Y(!1), ["space"]))
                    ],
                    onClick: N[5] || (N[5] = (Q) => Y(!1))
                  }, [
                    m.$slots["calendar-icon"] ? K(m.$slots, "calendar-icon", { key: 0 }) : $("", !0),
                    m.$slots["calendar-icon"] ? $("", !0) : (p(), fe(d(Et), { key: 1 }))
                  ], 42, Kr)), [
                    [Pt, !d(R)("time")]
                  ])
                ])
              ], 512)) : $("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Gr = (e, n) => {
  const { isDisabled: a, matchDate: t, getWeekFromDate: s } = Ve(n), f = W(null), h = W(b()), R = (r) => {
    !r.current && n.hideOffsetDates || (f.value = r.value);
  }, B = () => {
    f.value = null;
  }, T = (r) => Array.isArray(e.value) && n.range && e.value[0] && f.value ? r ? Oe(f.value, e.value[0]) : Ce(f.value, e.value[0]) : !0, U = (r, c) => {
    const D = () => e.value ? c ? e.value[0] || null : e.value[1] : null, L = e.value && Array.isArray(e.value) ? D() : null;
    return me(b(r.value), L);
  }, M = (r) => {
    const c = Array.isArray(e.value) ? e.value[0] : null;
    return r ? !Ce(f.value || null, c) : !0;
  }, v = (r, c = !0) => (n.range || n.weekPicker) && Array.isArray(e.value) ? n.hideOffsetDates && !r.current ? !1 : me(b(r.value), e.value[c ? 0 : 1]) : n.range ? U(r, c) && M(c) || me(r.value, Array.isArray(e.value) ? e.value[0] : null) && T(c) : !1, A = (r, c, D) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? r ? !1 : D ? Oe(e.value[0], c.value) : Ce(e.value[0], c.value) : !1, J = (r) => !e.value || n.hideOffsetDates && !r.current ? !1 : n.range ? n.modelAuto && Array.isArray(e.value) ? me(r.value, e.value[0] ? e.value[0] : h.value) : !1 : n.multiDates && Array.isArray(e.value) ? e.value.some((c) => me(c, r.value)) : me(r.value, e.value ? e.value : h.value), Z = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (f.value) {
        if (n.hideOffsetDates && !r.current)
          return !1;
        const c = ft(f.value, +n.autoRange), D = s(b(f.value));
        return n.weekPicker ? me(D[1], b(r.value)) : me(c, b(r.value));
      }
      return !1;
    }
    return !1;
  }, H = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (f.value) {
        const c = ft(f.value, +n.autoRange);
        if (n.hideOffsetDates && !r.current)
          return !1;
        const D = s(b(f.value));
        return n.weekPicker ? Oe(r.value, D[0]) && Ce(r.value, D[1]) : Oe(r.value, f.value) && Ce(r.value, c);
      }
      return !1;
    }
    return !1;
  }, C = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (f.value) {
        if (n.hideOffsetDates && !r.current)
          return !1;
        const c = s(b(f.value));
        return n.weekPicker ? me(c[0], r.value) : me(f.value, r.value);
      }
      return !1;
    }
    return !1;
  }, V = (r) => Wn(e.value, f.value, r.value), Y = () => n.modelAuto && Array.isArray(n.internalModelValue) ? !!n.internalModelValue[0] : !1, q = () => n.modelAuto ? jn(n.internalModelValue) : !0, z = (r) => {
    if (Array.isArray(e.value) && e.value.length || n.weekPicker)
      return !1;
    const c = n.range ? !v(r) && !v(r, !1) : !0;
    return !a(r.value) && !J(r) && !(!r.current && n.hideOffsetDates) && c;
  }, ee = (r) => n.range ? n.modelAuto ? Y() && J(r) : !1 : J(r), le = (r) => n.highlight ? t(r.value, n.highlight) : !1, S = (r) => a(r.value) && n.highlightDisabledDays === !1, P = (r) => n.highlightWeekDays && n.highlightWeekDays.includes(r.value.getDay()), X = (r) => (n.range || n.weekPicker) && (!(n.multiCalendars > 0) || r.current) && q() && !(!r.current && n.hideOffsetDates) && !J(r) ? V(r) : !1, m = (r) => {
    const { isRangeStart: c, isRangeEnd: D } = oe(r), L = n.range ? c || D : !1;
    return {
      dp__cell_offset: !r.current,
      dp__pointer: !n.disabled && !(!r.current && n.hideOffsetDates) && !a(r.value),
      dp__cell_disabled: a(r.value),
      dp__cell_highlight: !S(r) && (le(r) || P(r)) && !ee(r) && !L,
      dp__cell_highlight_active: !S(r) && (le(r) || P(r)) && ee(r),
      dp__today: !n.noToday && me(r.value, h.value) && r.current
    };
  }, N = (r) => ({
    dp__active_date: ee(r),
    dp__date_hover: z(r)
  }), x = (r) => ({
    ...Q(r),
    ...I(r),
    dp__range_between_week: X(r) && n.weekPicker
  }), oe = (r) => {
    const c = n.multiCalendars > 0 ? r.current && v(r) && q() : v(r) && q(), D = n.multiCalendars > 0 ? r.current && v(r, !1) && q() : v(r, !1) && q();
    return { isRangeStart: c, isRangeEnd: D };
  }, Q = (r) => {
    const { isRangeStart: c, isRangeEnd: D } = oe(r);
    return {
      dp__range_start: c,
      dp__range_end: D,
      dp__range_between: X(r) && !n.weekPicker,
      dp__date_hover_start: A(z(r), r, !0),
      dp__date_hover_end: A(z(r), r, !1)
    };
  }, I = (r) => ({
    ...Q(r),
    dp__cell_auto_range: H(r),
    dp__cell_auto_range_start: C(r),
    dp__cell_auto_range_end: Z(r)
  }), l = (r) => n.range ? n.autoRange ? I(r) : n.modelAuto ? { ...N(r), ...Q(r) } : Q(r) : n.weekPicker ? x(r) : N(r);
  return {
    setHoverDate: R,
    clearHoverDate: B,
    getDayClassData: (r) => ({
      ...m(r),
      ...l(r),
      [n.dayClass ? n.dayClass(r.value) : ""]: !0,
      [n.calendarCellClassName]: !!n.calendarCellClassName
    })
  };
}, Zr = ["id", "onKeydown"], Xr = {
  key: 0,
  class: "dp__sidebar_left"
}, qr = {
  key: 1,
  class: "dp__preset_ranges"
}, Jr = ["onClick"], Qr = {
  key: 2,
  class: "dp__sidebar_right"
}, el = {
  key: 3,
  class: "dp__now_wrap"
}, tl = /* @__PURE__ */ He({
  __name: "DatepickerMenu",
  props: {
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...nt
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setMenuFocused: s, setShiftKey: f, control: h } = zn(), { getCalendarDays: R, defaults: B } = Ve(t), T = on(), U = W(null), M = Mt({
      timePicker: !!(!t.enableTimePicker || t.timePicker || t.monthPicker),
      monthYearInput: !!t.timePicker,
      calendar: !1
    }), v = W([]), A = W([]), J = W(null), Z = W(null), H = W(!1), C = W(0);
    Ue(() => {
      H.value = !0;
      const o = $e(Z);
      if (o && !t.textInput && !t.inline && (s(!0), le()), o) {
        const k = (j) => {
          ["action-row", "time-picker", "month-year"].some(
            (de) => Object.keys(T).includes(de)
          ) || j.preventDefault(), j.stopImmediatePropagation(), j.stopPropagation();
        };
        o.addEventListener("pointerdown", k), o.addEventListener("mousedown", k);
      }
    });
    const { arrowRight: V, arrowLeft: Y, arrowDown: q, arrowUp: z } = tt(), ee = (o) => {
      o || o === 0 ? A.value[o].triggerTransition(
        N.value(o),
        x.value(o)
      ) : A.value.forEach(
        (k, j) => k.triggerTransition(N.value(j), x.value(j))
      );
    }, le = () => {
      const o = $e(Z);
      o && o.focus({ preventScroll: !0 });
    }, S = () => {
      var o;
      (o = t.flow) != null && o.length && C.value !== -1 && (C.value += 1, a("flow-step", C.value), xt());
    }, P = () => {
      C.value = -1;
    }, {
      calendars: X,
      modelValue: m,
      month: N,
      year: x,
      time: oe,
      updateTime: Q,
      updateMonthYear: I,
      selectDate: l,
      getWeekNum: i,
      monthYearSelect: r,
      handleScroll: c,
      handleArrow: D,
      handleSwipe: L,
      getMarker: O,
      selectCurrentDate: g,
      presetDateRange: w
    } = qa(t, a, S, ee, C), { setHoverDate: y, clearHoverDate: F, getDayClassData: ie } = Gr(m, t);
    et(
      X,
      () => {
        t.openOnTop && setTimeout(() => {
          a("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const Pe = it(T, "calendar"), Ze = it(T, "action"), re = it(T, "timePicker"), Xe = it(T, "monthYear"), ze = E(() => t.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), _e = E(() => Ua(t.yearRange, t.reverseYears)), at = E(() => Ha(t.locale, t.monthNameFormat)), te = E(() => (o) => R(N.value(o), x.value(o))), ge = E(
      () => B.value.multiCalendars > 0 && t.range ? [...Array(B.value.multiCalendars).keys()] : [0]
    ), ye = E(
      () => (o) => o === 1
    ), qe = E(() => t.monthPicker || t.timePicker || t.yearPicker), Be = E(
      () => ({
        dp__flex_display: B.value.multiCalendars > 0
      })
    ), Tt = E(() => ({
      dp__instance_calendar: B.value.multiCalendars > 0
    })), Lt = E(() => ({
      dp__menu_disabled: t.disabled,
      dp__menu_readonly: t.readonly
    })), Ut = E(
      () => (o) => At(te, o)
    ), Ht = E(
      () => ({
        dp__menu: !0,
        dp__menu_index: !t.inline,
        dp__relative: t.inline,
        [t.menuClassName]: !!t.menuClassName
      })
    ), At = (o, k) => o.value(k).map((j) => ({
      ...j,
      days: j.days.map((de) => (de.marker = O(de), de.classData = ie(de), de))
    })), yt = (o) => {
      o.stopPropagation(), o.stopImmediatePropagation();
    }, Wt = () => {
      t.escClose && a("close-picker");
    }, zt = (o, k = !1) => {
      l(o, k), t.spaceConfirm && a("select-date");
    }, gt = (o) => {
      var k;
      (k = t.flow) != null && k.length && (M[o] = !0, Object.keys(M).filter((j) => !M[j]).length || xt());
    }, Je = (o, k, j, de, ...Ye) => {
      if (t.flow[C.value] === o) {
        const G = de ? k.value[0] : k.value;
        G && G[j](...Ye);
      }
    }, xt = () => {
      Je("month", v, "toggleMonthPicker", !0, !0), Je("year", v, "toggleYearPicker", !0, !0), Je("calendar", J, "toggleTimePicker", !1, !1, !0), Je("time", J, "toggleTimePicker", !1, !0, !0);
      const o = t.flow[C.value];
      (o === "hours" || o === "minutes" || o === "seconds") && Je(o, J, "toggleTimePicker", !1, !0, !0, o);
    }, ht = (o) => {
      if (t.arrowNavigation) {
        if (o === "up")
          return z();
        if (o === "down")
          return q();
        if (o === "left")
          return Y();
        if (o === "right")
          return V();
      } else
        o === "left" || o === "up" ? D("left", 0, o === "up") : D("right", 0, o === "down");
    }, vn = (o) => {
      f(o.shiftKey), !t.disableMonthYearSelect && o.code === "Tab" && o.target.classList.contains("dp__menu") && h.value.shiftKeyInMenu && (o.preventDefault(), o.stopImmediatePropagation(), a("close-picker"));
    }, u = (o) => {
      v.value[0] && v.value[0].handleMonthYearChange(o);
    };
    return n({
      updateMonthYear: I
    }), (o, k) => {
      var j;
      return p(), fe(vt, {
        appear: "",
        name: (j = d(B).transitions) == null ? void 0 : j.menuAppear,
        mode: "out-in",
        css: !!o.transitions
      }, {
        default: se(() => {
          var de, Ye;
          return [
            ne("div", {
              id: o.uid ? `dp-menu-${o.uid}` : void 0,
              tabindex: "0",
              ref_key: "dpMenuRef",
              ref: Z,
              role: "dialog",
              class: ve(d(Ht)),
              onMouseleave: k[15] || (k[15] = //@ts-ignore
              (...G) => d(F) && d(F)(...G)),
              onClick: yt,
              onKeydown: [
                ue(Wt, ["esc"]),
                k[16] || (k[16] = ue(Ge((G) => ht("left"), ["prevent"]), ["left"])),
                k[17] || (k[17] = ue(Ge((G) => ht("up"), ["prevent"]), ["up"])),
                k[18] || (k[18] = ue(Ge((G) => ht("down"), ["prevent"]), ["down"])),
                k[19] || (k[19] = ue(Ge((G) => ht("right"), ["prevent"]), ["right"])),
                vn
              ]
            }, [
              (o.disabled || o.readonly) && o.inline ? (p(), _("div", {
                key: 0,
                class: ve(d(Lt))
              }, null, 2)) : $("", !0),
              !o.inline && !o.teleportCenter ? (p(), _("div", {
                key: 1,
                class: ve(d(ze))
              }, null, 2)) : $("", !0),
              ne("div", {
                class: ve({
                  dp__menu_content_wrapper: ((de = o.presetRanges) == null ? void 0 : de.length) || !!o.$slots["left-sidebar"] || !!o.$slots["right-sidebar"]
                })
              }, [
                o.$slots["left-sidebar"] ? (p(), _("div", Xr, [
                  K(o.$slots, "left-sidebar", Se(Fe({ handleMonthYearChange: u })))
                ])) : $("", !0),
                (Ye = o.presetRanges) != null && Ye.length ? (p(), _("div", qr, [
                  (p(!0), _(ce, null, we(o.presetRanges, (G, xe) => (p(), _("div", {
                    key: xe,
                    style: lt(G.style || {}),
                    class: "dp__preset_range",
                    onClick: (ae) => d(w)(G.range, !!G.slot)
                  }, [
                    G.slot ? K(o.$slots, G.slot, {
                      key: 0,
                      presetDateRange: d(w),
                      label: G.label,
                      range: G.range
                    }) : (p(), _(ce, { key: 1 }, [
                      We(Ae(G.label), 1)
                    ], 64))
                  ], 12, Jr))), 128))
                ])) : $("", !0),
                ne("div", {
                  class: "dp__instance_calendar",
                  ref_key: "calendarWrapperRef",
                  ref: U,
                  role: "document"
                }, [
                  ne("div", {
                    class: ve(d(Be))
                  }, [
                    (p(!0), _(ce, null, we(d(ge), (G, xe) => (p(), _("div", {
                      key: G,
                      class: ve(d(Tt))
                    }, [
                      !o.disableMonthYearSelect && !o.timePicker ? (p(), fe(Br, De({
                        key: 0,
                        ref_for: !0,
                        ref: (ae) => {
                          ae && (v.value[xe] = ae);
                        },
                        months: d(at),
                        years: d(_e),
                        month: d(N)(G),
                        year: d(x)(G),
                        instance: G,
                        "internal-model-value": e.internalModelValue
                      }, o.$props, {
                        onMount: k[0] || (k[0] = (ae) => gt("monthYearInput")),
                        onResetFlow: P,
                        onUpdateMonthYear: (ae) => d(I)(G, ae),
                        onMonthYearSelect: d(r),
                        onOverlayClosed: le
                      }), Ie({ _: 2 }, [
                        we(d(Xe), (ae, Zn) => ({
                          name: ae,
                          fn: se((Kt) => [
                            K(o.$slots, ae, Se(Fe(Kt)))
                          ])
                        }))
                      ]), 1040, ["months", "years", "month", "year", "instance", "internal-model-value", "onUpdateMonthYear", "onMonthYearSelect"])) : $("", !0),
                      Qe(Dr, De({
                        ref_for: !0,
                        ref: (ae) => {
                          ae && (A.value[xe] = ae);
                        },
                        "specific-mode": d(qe),
                        "get-week-num": d(i),
                        instance: G,
                        "mapped-dates": d(Ut)(G),
                        month: d(N)(G),
                        year: d(x)(G)
                      }, o.$props, {
                        "flow-step": C.value,
                        "onUpdate:flowStep": k[1] || (k[1] = (ae) => C.value = ae),
                        onSelectDate: (ae) => d(l)(ae, !d(ye)(G)),
                        onHandleSpace: (ae) => zt(ae, !d(ye)(G)),
                        onSetHoverDate: k[2] || (k[2] = (ae) => d(y)(ae)),
                        onHandleScroll: (ae) => d(c)(ae, G),
                        onHandleSwipe: (ae) => d(L)(ae, G),
                        onMount: k[3] || (k[3] = (ae) => gt("calendar")),
                        onResetFlow: P,
                        onTooltipOpen: k[4] || (k[4] = (ae) => o.$emit("tooltip-open", ae)),
                        onTooltipClose: k[5] || (k[5] = (ae) => o.$emit("tooltip-close", ae))
                      }), Ie({ _: 2 }, [
                        we(d(Pe), (ae, Zn) => ({
                          name: ae,
                          fn: se((Kt) => [
                            K(o.$slots, ae, Se(Fe({ ...Kt })))
                          ])
                        }))
                      ]), 1040, ["specific-mode", "get-week-num", "instance", "mapped-dates", "month", "year", "flow-step", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
                    ], 2))), 128))
                  ], 2),
                  ne("div", null, [
                    o.$slots["time-picker"] ? K(o.$slots, "time-picker", Se(De({ key: 0 }, { time: d(oe), updateTime: d(Q) }))) : (p(), _(ce, { key: 1 }, [
                      o.enableTimePicker && !o.monthPicker && !o.weekPicker ? (p(), fe(jr, De({
                        key: 0,
                        ref_key: "timePickerRef",
                        ref: J,
                        hours: d(oe).hours,
                        minutes: d(oe).minutes,
                        seconds: d(oe).seconds,
                        "internal-model-value": e.internalModelValue
                      }, o.$props, {
                        onMount: k[6] || (k[6] = (G) => gt("timePicker")),
                        "onUpdate:hours": k[7] || (k[7] = (G) => d(Q)(G)),
                        "onUpdate:minutes": k[8] || (k[8] = (G) => d(Q)(G, !1)),
                        "onUpdate:seconds": k[9] || (k[9] = (G) => d(Q)(G, !1, !0)),
                        onResetFlow: P,
                        onOverlayClosed: le,
                        onOverlayOpened: k[10] || (k[10] = (G) => o.$emit("time-picker-open", G))
                      }), Ie({ _: 2 }, [
                        we(d(re), (G, xe) => ({
                          name: G,
                          fn: se((ae) => [
                            K(o.$slots, G, Se(Fe(ae)))
                          ])
                        }))
                      ]), 1040, ["hours", "minutes", "seconds", "internal-model-value"])) : $("", !0)
                    ], 64))
                  ])
                ], 512),
                o.$slots["right-sidebar"] ? (p(), _("div", Qr, [
                  K(o.$slots, "right-sidebar", Se(Fe({ handleMonthYearChange: u })))
                ])) : $("", !0),
                o.showNowButton ? (p(), _("div", el, [
                  o.$slots["now-button"] ? K(o.$slots, "now-button", {
                    key: 0,
                    selectCurrentDate: d(g)
                  }) : $("", !0),
                  o.$slots["now-button"] ? $("", !0) : (p(), _("button", {
                    key: 1,
                    type: "button",
                    role: "button",
                    class: "dp__now_button",
                    onClick: k[11] || (k[11] = //@ts-ignore
                    (...G) => d(g) && d(g)(...G))
                  }, Ae(o.nowButtonLabel), 1))
                ])) : $("", !0)
              ], 2),
              !o.autoApply || o.keepActionRow ? (p(), fe(mr, De({
                key: 2,
                "menu-mount": H.value,
                "internal-model-value": e.internalModelValue
              }, o.$props, {
                onClosePicker: k[12] || (k[12] = (G) => o.$emit("close-picker")),
                onSelectDate: k[13] || (k[13] = (G) => o.$emit("select-date")),
                onInvalidSelect: k[14] || (k[14] = (G) => o.$emit("invalid-select"))
              }), Ie({ _: 2 }, [
                we(d(Ze), (G, xe) => ({
                  name: G,
                  fn: se((ae) => [
                    K(o.$slots, G, Se(Fe({ ...ae })))
                  ])
                }))
              ]), 1040, ["menu-mount", "internal-model-value"])) : $("", !0)
            ], 42, Zr)
          ];
        }),
        _: 3
      }, 8, ["name", "css"]);
    };
  }
}), nl = typeof window < "u" ? window : void 0, nn = () => {
}, al = (e) => qn() ? (Jn(e), !0) : !1, rl = (e, n, a, t) => {
  if (!e)
    return nn;
  let s = nn;
  const f = et(
    () => d(e),
    (R) => {
      s(), R && (R.addEventListener(n, a, t), s = () => {
        R.removeEventListener(n, a, t), s = nn;
      });
    },
    { immediate: !0, flush: "post" }
  ), h = () => {
    f(), s();
  };
  return al(h), h;
}, ll = (e, n, a, t = {}) => {
  const { window: s = nl, event: f = "pointerdown" } = t;
  return s ? rl(s, f, (R) => {
    const B = $e(e), T = $e(n);
    !B || !T || B === R.target || R.composedPath().includes(B) || R.composedPath().includes(T) || a(R);
  }, { passive: !0 }) : void 0;
}, ol = /* @__PURE__ */ He({
  __name: "VueDatePicker",
  props: {
    ...nt
  },
  emits: [
    "update:model-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, s = on(), f = W(!1), h = $t(t, "modelValue"), R = $t(t, "timezone"), B = W(null), T = W(null), U = W(!1), M = W(null), { setMenuFocused: v, setShiftKey: A } = zn(), { clearArrowNav: J } = tt(), { validateDate: Z, isValidTime: H } = Ve(t);
    Ue(() => {
      X(t.modelValue), t.inline || (le(M.value).addEventListener("scroll", l), window.addEventListener("resize", i)), t.inline && (f.value = !0);
    }), On(() => {
      if (!t.inline) {
        const te = le(M.value);
        te && te.removeEventListener("scroll", l), window.removeEventListener("resize", i);
      }
    });
    const C = it(s, "all", t.presetRanges), V = it(s, "input");
    et(
      [h, R],
      () => {
        X(h.value);
      },
      { deep: !0 }
    );
    const { openOnTop: Y, menuPosition: q, setMenuPosition: z, setInitialPosition: ee, getScrollableParent: le } = er(
      B,
      T,
      a,
      t
    ), {
      inputValue: S,
      internalModelValue: P,
      parseExternalModelValue: X,
      emitModelValue: m,
      formatInputValue: N,
      checkBeforeEmit: x
    } = Ja(a, t, U), oe = E(
      () => ({
        dp__main: !0,
        dp__theme_dark: t.dark,
        dp__theme_light: !t.dark,
        dp__flex_display: t.inline,
        dp__flex_display_with_input: t.inlineWithInput
      })
    ), Q = E(() => t.dark ? "dp__theme_dark" : "dp__theme_light"), I = E(() => t.teleport ? {
      to: typeof t.teleport == "boolean" ? "body" : t.teleport,
      disabled: t.inline
    } : { class: "dp__outer_menu_wrap" }), l = () => {
      f.value && (t.closeOnScroll ? F() : z());
    }, i = () => {
      f.value && z();
    }, r = () => {
      !t.disabled && !t.readonly && (ee(), f.value = !0, dt().then(() => {
        z(), f.value && a("open");
      }), f.value || y(), X(t.modelValue));
    }, c = () => {
      S.value = "", y(), a("update:model-value", null), a("cleared"), F();
    }, D = () => {
      const te = P.value;
      return !te || !Array.isArray(te) && Z(te) ? !0 : Array.isArray(te) ? te.length === 2 && Z(te[0]) && Z(te[1]) ? !0 : Z(te[0]) : !1;
    }, L = () => {
      x() && D() ? (m(), F()) : a("invalid-select", P.value);
    }, O = (te) => {
      g(), m(), t.closeOnAutoApply && !te && F();
    }, g = () => {
      T.value && t.textInput && T.value.setParsedDate(P.value);
    }, w = (te = !1) => {
      t.autoApply && H(P.value) && D() && (t.range && Array.isArray(P.value) ? (t.partialRange || P.value.length === 2) && O(te) : O(te));
    }, y = () => {
      t.textInput || (P.value = null);
    }, F = () => {
      t.inline || (f.value && (f.value = !1, v(!1), A(!1), J(), a("closed"), ee(), S.value && X(h.value)), y());
    }, ie = (te, ge) => {
      if (!te) {
        P.value = null;
        return;
      }
      P.value = te, ge && (L(), a("text-submit"));
    }, Pe = () => {
      t.autoApply && H(P.value) && m(), g();
    }, Ze = () => f.value ? F() : r(), re = (te) => {
      P.value = te;
    }, Xe = () => {
      t.textInput && (U.value = !0, N()), a("focus");
    }, ze = () => {
      t.textInput && (U.value = !1, X(t.modelValue)), a("blur");
    }, _e = (te) => {
      B.value && B.value.updateMonthYear(0, {
        month: Cn(te.month),
        year: Cn(te.year)
      });
    }, at = (te) => {
      X(te || t.modelValue);
    };
    return ll(
      B,
      T,
      t.onClickOutside ? () => t.onClickOutside(D) : F
    ), n({
      closeMenu: F,
      selectDate: L,
      clearValue: c,
      openMenu: r,
      onScroll: l,
      formatInputValue: N,
      // exposed for testing purposes
      updateInternalModelValue: re,
      // modify internal modelValue
      setMonthYear: _e,
      parseModel: at
    }), (te, ge) => (p(), _("div", {
      class: ve(d(oe)),
      ref_key: "pickerWrapperRef",
      ref: M
    }, [
      Qe(ir, De({
        ref_key: "inputRef",
        ref: T,
        "is-menu-open": f.value,
        "input-value": d(S),
        "onUpdate:inputValue": ge[0] || (ge[0] = (ye) => ot(S) ? S.value = ye : null)
      }, te.$props, {
        onClear: c,
        onOpen: r,
        onSetInputDate: ie,
        onSetEmptyDate: d(m),
        onSelectDate: L,
        onToggle: Ze,
        onClose: F,
        onFocus: Xe,
        onBlur: ze
      }), Ie({ _: 2 }, [
        we(d(V), (ye, qe) => ({
          name: ye,
          fn: se((Be) => [
            K(te.$slots, ye, Se(Fe(Be)))
          ])
        }))
      ]), 1040, ["is-menu-open", "input-value", "onSetEmptyDate"]),
      f.value ? (p(), fe(In(te.teleport ? Qn : "div"), Se(De({ key: 0 }, d(I))), {
        default: se(() => [
          f.value ? (p(), fe(tl, De({
            key: 0,
            ref_key: "dpMenuRef",
            ref: B,
            class: d(Q),
            style: d(q),
            "open-on-top": d(Y)
          }, te.$props, {
            "internal-model-value": d(P),
            "onUpdate:internalModelValue": ge[1] || (ge[1] = (ye) => ot(P) ? P.value = ye : null),
            onClosePicker: F,
            onSelectDate: L,
            onAutoApply: w,
            onTimeUpdate: Pe,
            onFlowStep: ge[2] || (ge[2] = (ye) => te.$emit("flow-step", ye)),
            onUpdateMonthYear: ge[3] || (ge[3] = (ye) => te.$emit("update-month-year", ye)),
            onInvalidSelect: ge[4] || (ge[4] = (ye) => te.$emit("invalid-select", d(P))),
            onInvalidFixedRange: ge[5] || (ge[5] = (ye) => te.$emit("invalid-fixed-range", ye)),
            onRecalculatePosition: d(z),
            onTooltipOpen: ge[6] || (ge[6] = (ye) => te.$emit("tooltip-open", ye)),
            onTooltipClose: ge[7] || (ge[7] = (ye) => te.$emit("tooltip-close", ye)),
            onTimePickerOpen: ge[8] || (ge[8] = (ye) => te.$emit("time-picker-open", ye))
          }), Ie({ _: 2 }, [
            we(d(C), (ye, qe) => ({
              name: ye,
              fn: se((Be) => [
                K(te.$slots, ye, Se(Fe({ ...Be })))
              ])
            }))
          ]), 1040, ["class", "style", "open-on-top", "internal-model-value", "onRecalculatePosition"])) : $("", !0)
        ]),
        _: 3
      }, 16)) : $("", !0)
    ], 2));
  }
}), Gn = /* @__PURE__ */ (() => {
  const e = ol;
  return e.install = (n) => {
    n.component("Vue3DatePicker", e);
  }, e;
})(), sl = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Gn
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(sl).forEach(([e, n]) => {
  e !== "default" && (Gn[e] = n);
});
export {
  Gn as default
};
